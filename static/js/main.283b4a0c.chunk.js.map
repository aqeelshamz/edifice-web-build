{"version":3,"sources":["Components/Navbar/Navbar.js","Components/Card/Card.js","values/server.js","Pages/Home/Home.js","Pages/Login/Login.js","Pages/Course/Course.js","Pages/ForgotPassword/ForgotPassword.js","Pages/EnrollCourse/EnrollCourse.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","useState","authenticated","setAuthenticated","useEffect","localStorage","getItem","history","useHistory","className","onClick","push","alt","src","removeItem","window","location","reload","Card","courseName","courseType","thumbnail","courseId","toEnroll","style","toUpperCase","color","serverUrl","Home","document","title","loading","setLoading","myCourses","setMyCourses","allCourses","setAllCourses","courseTags","setCourseTags","getMyCourses","getAllCourses","replace","data","JSON","stringify","config","method","url","headers","Authorization","axios","then","response","getTags","tags","course","tag","console","log","includes","type","length","map","name","logo","_id","paid","Login","userName","setUserName","password","setPassword","clearFields","showToast","msg","toast","background","textAlign","position","autoClose","hideProgressBar","closeOnClick","value","onChange","e","target","placeholder","org_id","username","setItem","user","token","catch","err","message","width","height","Course","lessons","setLessons","currentLessonId","setCurrentLessonId","currentVideo","setCurrentVideo","currentLessonName","setCurrentLessonName","currentBody","setCurrentBody","useParams","getJoinStatus","status","every","isExam","youtube_parser","ytLink","body","forEach","arr","id","fetchLessons","lessonId","a","lesson","match","videoId","opts","playerVars","modestbranding","rel","showinfo","markAttendance","scrollTo","ForgotPassword","email","setEmail","EnrollCourse","courseDetails","setCourseDetails","isEnrolled","setIsEnrolled","script","createElement","async","appendChild","getCourseDetails","pay","amount","fee","receipt","options","key","description","category","order_id","theme","Razorpay","open","display","code","enrollCourse","backgroundImage","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.283b4a0c.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./Navbar.css\";\r\n\r\nconst Navbar = () => {\r\n    const [authenticated, setAuthenticated] = useState(false);\r\n\r\n    useEffect(() => {\r\n        localStorage.getItem(\"token\") === null\r\n            ? setAuthenticated(false)\r\n            : setAuthenticated(true);\r\n    }, []);\r\n\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <nav className=\"navbar-container\">\r\n            <div className=\"navbar-left-portion\" onClick={()=>{history.push(\"/\")}}>\r\n                <img\r\n                    alt=\"logo\"\r\n                    src=\"https://play-lh.googleusercontent.com/SpoozAfBft3HEAvsEV8xHTScJnIzLLWBkt-vb2hONjrsYWn8D7bsm4vKjzp_3-JI4N_K\"\r\n                />\r\n                <p>Edifice</p>\r\n            </div>\r\n            <div className=\"navbar-right-portion\">\r\n                {authenticated ? (\r\n                    <p\r\n                        onClick={() => {\r\n                            localStorage.removeItem(\"token\");\r\n                            history.push(\"/\");\r\n                            window.location.reload();\r\n                        }}\r\n                    >\r\n                        LOGOUT\r\n                    </p>\r\n                ) : (\r\n                    <p onClick={() => history.push(\"/login\")}>LOGIN</p>\r\n                )}\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./Card.css\";\r\n\r\nconst Card = ({ courseName, courseType, thumbnail, courseId, toEnroll }) => {\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <div\r\n            onClick={() => history.push(toEnroll ? `course/enroll/${courseId}` : `course/${courseId}`)}\r\n            className=\"course-card\"\r\n        >\r\n            <div>\r\n                <div className=\"thumbnail\">\r\n                    <img src={thumbnail} alt=\"\"></img>\r\n                </div>\r\n            </div>\r\n            <p>{courseName}</p>\r\n            <p\r\n                style={\r\n                    courseType.toUpperCase() === \"PREMIUM\"\r\n                        ? { color: \"orange\" }\r\n                        : courseType.toUpperCase() === \"FREE\"\r\n                        ? { color: \"var(--edificeGreen)\" }\r\n                        : { color: \"grey\" }\r\n                }\r\n            >\r\n                {courseType.toUpperCase()}\r\n            </p>\r\n        </div>\r\n        // <div className=\"homepage-course-card\">\r\n        //     <div>\r\n        //         <div></div>\r\n        //     </div>\r\n        //     <p>Lorem ipsum sample Course</p>\r\n        //     <p\r\n        //         style={\r\n        //             courseType.toUpperCase() === \"PREMIUM\"\r\n        //                 ? { color: \"orange\" }\r\n        //                 : courseType.toUpperCase() === \"FREE\"\r\n        //                 ? { color: \"green\" }\r\n        //                 : null\r\n        //         }\r\n        //     >\r\n        //         {courseType.toUpperCase()}\r\n        //     </p>\r\n        // </div>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","const serverUrl = \"http://edificeapp.wisdomislam.org\";\r\n\r\nexport { serverUrl };\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Home.css\";\r\nimport Navbar from \"../../Components/Navbar/Navbar\";\r\nimport Card from \"../../Components/Card/Card\";\r\nimport axios from \"axios\";\r\nimport { serverUrl } from \"../../values/server\";\r\nimport ReactLoading from \"react-loading\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Home = () => {\r\n    window.document.title = \"Home | Edifice\";\r\n\r\n    const [loading, setLoading] = useState([]);\r\n    const [myCourses, setMyCourses] = useState([]);\r\n\r\n    const [allCourses, setAllCourses] = useState([]);\r\n\r\n    const [courseTags, setCourseTags] = useState([]);\r\n    // const []\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"token\") !== null) {\r\n            getMyCourses();\r\n            getAllCourses();\r\n        } else {\r\n            history.replace(\"/login\");\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [history]);\r\n\r\n    const getMyCourses = () => {\r\n        setLoading(true);\r\n\r\n        const data = JSON.stringify({});\r\n\r\n        const config = {\r\n            method: \"post\",\r\n            url: `${serverUrl}/lms/get-lmsCourseEnroll-list`,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `JWT ${localStorage.getItem(\"token\")}`,\r\n            },\r\n            data: data,\r\n        };\r\n\r\n        axios(config).then((response) => {\r\n            setMyCourses(response.data);\r\n            setLoading(false);\r\n        });\r\n    };\r\n\r\n    const getAllCourses = () => {\r\n        setLoading(true);\r\n\r\n        const data = JSON.stringify({});\r\n\r\n        const config = {\r\n            method: \"post\",\r\n            url: `${serverUrl}/lms/get-lmsCourse-list-v2`,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `JWT ${localStorage.getItem(\"token\")}`,\r\n            },\r\n            data: data,\r\n        };\r\n\r\n        axios(config).then((response) => {\r\n            setAllCourses(response.data);\r\n            getTags(response.data);\r\n            setLoading(false);\r\n        });\r\n    };\r\n\r\n    const getTags = (allCourses) => {\r\n        let tags = [];\r\n        for (const course of allCourses) {\r\n            for (const tag of course.tags) {\r\n                console.log(`'${tag}'`);\r\n                if (!tags.includes(tag)) {\r\n                    tags.push(tag);\r\n                }\r\n            }\r\n        }\r\n\r\n        setCourseTags(tags);\r\n    };\r\n\r\n    // const getCourseProviders = () => {\r\n    //     setLoading(true);\r\n\r\n    //     const data = JSON.stringify({});\r\n\r\n    //     const config = {\r\n    //         method: \"post\",\r\n    //         url: `${serverUrl}/lms/get-lmsCourseProvider-list`,\r\n    //         headers: {\r\n    //             \"Content-Type\": \"application/json\",\r\n    //             Authorization: `JWT ${localStorage.getItem(\"token\")}`,\r\n    //         },\r\n    //         data: data,\r\n    //     };\r\n\r\n    //     axios(config).then((response) => {\r\n    //         setAllCourses(response.data);\r\n    //         getTags(response.data);\r\n    //         setLoading(false);\r\n    //     });\r\n    // };\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <div className=\"homepage-header top-margin\">\r\n                <p>My Courses</p>\r\n                <div></div>\r\n            </div>\r\n            <div className=\"homepage-course-cards-list\">\r\n                {loading ? (\r\n                    <div className=\"loading-spin-container\">\r\n                        <ReactLoading type={\"spin\"} color={\"#00bc4e\"} />\r\n                    </div>\r\n                ) : myCourses.length === 0 ? <div className=\"loading-spin-container\">Enrolled Courses will appear here</div> : (\r\n                    myCourses.map((course) => (\r\n                        <Card\r\n                            courseName={course.course.name}\r\n                            courseType=\"\"\r\n                            thumbnail={\r\n                                serverUrl + \"/files/pics/\" + course.course.logo\r\n                            }\r\n                            courseId={course.course._id}\r\n                            toEnroll={false}\r\n                        />\r\n                    ))\r\n                )}\r\n            </div>\r\n            {loading\r\n                ? \"\"\r\n                : courseTags.map((tag) => {\r\n                      return (\r\n                          <>\r\n                              <div className=\"homepage-header\">\r\n                                  <p>{tag}</p>\r\n                                  <div></div>\r\n                              </div>\r\n                              <div className=\"homepage-course-cards-list\">\r\n                                  {allCourses.map((course) =>\r\n                                      !course.tags.includes(tag) ? (\r\n                                          \"\"\r\n                                      ) : (\r\n                                          <Card\r\n                                              courseName={course.name}\r\n                                              courseType={\r\n                                                  course.paid\r\n                                                      ? \"PREMIUM\"\r\n                                                      : \"FREE\"\r\n                                              }\r\n                                              thumbnail={\r\n                                                  serverUrl +\r\n                                                  \"/files/pics/\" +\r\n                                                  course.logo\r\n                                              }\r\n                                              courseId={course._id}\r\n                                              toEnroll={true}\r\n                                          />\r\n                                      )\r\n                                  )}\r\n                              </div>\r\n                          </>\r\n                      );\r\n                  })}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { serverUrl } from \"../../values/server\";\r\nimport \"./Login.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport ReactLoading from \"react-loading\";\r\n\r\nconst Login = () => {\r\n    window.document.title = \"Login | Edifice\";\r\n\r\n    const [userName, setUserName] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const history = useHistory();\r\n\r\n    const clearFields = () => {\r\n        setUserName(\"\");\r\n        setPassword(\"\");\r\n    };\r\n\r\n    const showToast = (msg) => {\r\n        toast(msg, {\r\n            style: {\r\n                background: \"var(--errorRed)\",\r\n                color: \"white\",\r\n                textAlign: \"center\",\r\n            },\r\n            position: \"bottom-center\",\r\n            autoClose: 5000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n        });\r\n    };\r\n\r\n    const onLogin = () => {\r\n        setLoading(true);\r\n        if (!userName || !password) {\r\n            setLoading(false);\r\n            showToast(\"Email and Password must not be empty\");\r\n            clearFields();\r\n        } else {\r\n            const data = JSON.stringify({\r\n                org_id: \"5f143f5d93c1f321f663aaf6\",\r\n                username: userName,\r\n                password: password,\r\n            });\r\n            const config = {\r\n                method: \"post\",\r\n                url: `${serverUrl}/users/authenticate`,\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                data: data,\r\n            };\r\n\r\n            axios(config)\r\n                .then((response) => {\r\n                    localStorage.setItem(\"token\", response.data.user.token);\r\n                    history.push(\"/\");\r\n                    setLoading(false);\r\n                    clearFields();\r\n                    console.log(response.data.user.token);\r\n                    window.location.reload();\r\n                })\r\n                .catch((err) => {\r\n                    if (err.message === \"Request failed with status code 500\") {\r\n                        showToast(\"Invalid email or password\");\r\n                    }\r\n                    setLoading(false);\r\n                    clearFields();\r\n                });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"login-wrapper\">\r\n                <div className=\"login-container\">\r\n                    <div className=\"login-header-row\">\r\n                        <img\r\n                            alt=\"logo\"\r\n                            src=\"https://play-lh.googleusercontent.com/SpoozAfBft3HEAvsEV8xHTScJnIzLLWBkt-vb2hONjrsYWn8D7bsm4vKjzp_3-JI4N_K\"\r\n                        />\r\n                        <p>EDIFICE</p>\r\n                    </div>\r\n                    <div className=\"login-header-desc\">\r\n                        <p>Log in to Edifice with email and password.</p>\r\n                    </div>\r\n                    <div className=\"login-input-container\">\r\n                        <input\r\n                            value={userName}\r\n                            onChange={(e) => setUserName(e.target.value)}\r\n                            placeholder=\"Email\"\r\n                            type=\"email\"\r\n                        />\r\n                        <input\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            placeholder=\"Password\"\r\n                            type=\"password\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"login-forgot-password-container\" onClick={()=>history.push(\"/forgot-password\")}>\r\n                        <p>Forgot Password</p>\r\n                    </div>\r\n                    <div className=\"login-footer-row\">\r\n                        <div className=\"login-text-button\">\r\n                            <p>Not Registered?</p>\r\n                            <p>Register Now</p>\r\n                        </div>\r\n                        <div onClick={onLogin} className=\"login-button\">\r\n                            {!loading ? (\r\n                                `LOG IN`\r\n                            ) : (\r\n                                <ReactLoading\r\n                                    type={\"spin\"}\r\n                                    color={\"white\"}\r\n                                    width={\"10%\"}\r\n                                    height={\"60%\"}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <ToastContainer />\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router\";\r\nimport { serverUrl } from \"../../values/server\";\r\nimport \"./Course.css\";\r\nimport YouTube from \"react-youtube\";\r\nimport Navbar from \"../../Components/Navbar/Navbar\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ReactLoading from \"react-loading\";\r\n\r\nconst Course = ({ courseName }) => {\r\n    window.document.title = \"Loading Lessons.. | Edifice\";\r\n    const [lessons, setLessons] = useState([]);\r\n    const [currentLessonId, setCurrentLessonId] = useState(\"\");\r\n    const [currentVideo, setCurrentVideo] = useState(\"\");\r\n    const [currentLessonName, setCurrentLessonName] = useState(\"\");\r\n    const [currentBody, setCurrentBody] = useState(\"\");\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const { courseId } = useParams();\r\n    const history = useHistory();\r\n\r\n    if (!localStorage.getItem(\"token\")) {\r\n        history.push(\"/\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        getJoinStatus();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const fetchLessons = () => {\r\n        console.log(\"loading lessons....\");\r\n        const data = JSON.stringify({ course: courseId });\r\n\r\n        const config = {\r\n            method: \"post\",\r\n            url: `${serverUrl}/lms/get-lmsLesson-list`,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `JWT ${localStorage.getItem(\"token\")}`,\r\n            },\r\n            data: data,\r\n        };\r\n\r\n        axios(config).then((response) => {\r\n            response.data.every((data) => {\r\n                if (!data.isExam) {\r\n                    setCurrentVideo(youtube_parser(data.ytLink));\r\n                    setCurrentLessonName(data.name);\r\n                    setCurrentBody(data.body);\r\n                    setCurrentLessonId(data._id);\r\n                    window.document.title = data.name + \" - Edifice\";\r\n                    return false;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            response.data.forEach((data) => {\r\n                setLessons((arr) => [\r\n                    ...arr,\r\n                    {\r\n                        id: data._id,\r\n                        name: data.name,\r\n                        ytLink: data.ytLink,\r\n                        isExam: data.isExam,\r\n                        body: data.body,\r\n                    },\r\n                ]);\r\n            });\r\n            setLoading(false);\r\n        });\r\n    };\r\n\r\n    const getJoinStatus = () => {\r\n        setLoading(true);\r\n        const data = JSON.stringify({ course: courseId });\r\n\r\n        const config = {\r\n            method: \"post\",\r\n            url: `${serverUrl}/lms/get-lmsCourseEnroll-status`,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `JWT ${localStorage.getItem(\"token\")}`,\r\n            },\r\n            data: data,\r\n        };\r\n\r\n        axios(config).then((response) => {\r\n            console.log(response.data);\r\n\r\n            if (response.data.status === \"Enrolled\") {\r\n                fetchLessons();\r\n            } else {\r\n                history.replace(\"/\");\r\n            }\r\n        });\r\n    };\r\n\r\n    async function markAttendance(lessonId) {\r\n        const data = JSON.stringify({ lesson: lessonId });\r\n        const config = {\r\n            method: \"post\",\r\n            url: `${serverUrl}/lms/get-lmsAttendance`,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `JWT ${localStorage.getItem(\"token\")}`,\r\n            },\r\n            data: data,\r\n        };\r\n\r\n        await axios(config);\r\n    }\r\n\r\n    const youtube_parser = (url) => {\r\n        var regExp =\r\n            /^https?:\\/\\/(?:www\\.youtube(?:-nocookie)?\\.com\\/|m\\.youtube\\.com\\/|youtube\\.com\\/)?(?:ytscreeningroom\\?vi?=|youtu\\.be\\/|vi?\\/|user\\/.+\\/u\\/\\w{1,2}\\/|embed\\/|watch\\?(?:.*&)?vi?=|&vi?=|\\?(?:.*&)?vi?=)([^#&?\\n/<>\"']*)/i;\r\n        var match = url.match(regExp);\r\n        return match && match[1].length === 11 ? match[1] : false;\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <div className=\"course-page-container top-margin\">\r\n                {loading ? (\r\n                    <div className=\"loading-spin-container\">\r\n                        <ReactLoading type={\"spin\"} color={\"#00bc4e\"} />\r\n                    </div>\r\n                ) : (\r\n                    <>\r\n                        <div className=\"course-page-video-container\">\r\n                            <YouTube\r\n                                className=\"yt-player\"\r\n                                videoId={currentVideo}\r\n                                opts={{\r\n                                    width: \"100%\",\r\n                                    height: \"100%\",\r\n                                    playerVars: {\r\n                                        modestbranding: 1,\r\n                                        rel: 0,\r\n                                        showinfo: 0,\r\n                                    },\r\n                                }}\r\n                            />\r\n                            <p className=\"ytTitle\">{currentLessonName}</p>\r\n                            <p className=\"ytBody\">{currentBody}</p>\r\n                        </div>\r\n                        <div className=\"course-name-lessons-container\">\r\n                            {lessons.map((lesson) =>\r\n                                !lesson.isExam ? (\r\n                                    <div\r\n                                        key={lesson.id}\r\n                                        className={\r\n                                            currentLessonId === lesson.id\r\n                                                ? \"active-lesson-card\"\r\n                                                : \"\"\r\n                                        }\r\n                                        onClick={() => {\r\n                                            setCurrentVideo(\r\n                                                youtube_parser(lesson.ytLink)\r\n                                            );\r\n                                            setCurrentLessonName(lesson.name);\r\n                                            setCurrentBody(lesson.body);\r\n                                            setCurrentLessonId(lesson.id);\r\n                                            markAttendance(lesson.id);\r\n                                            window.document.title =\r\n                                                lesson.name + \" | Edifice\";\r\n                                            window.scrollTo(0, 0);\r\n                                        }}\r\n                                    >\r\n                                        <p>{lesson.name}</p>\r\n                                        <p>{lesson.body}</p>\r\n                                    </div>\r\n                                ) : null\r\n                            )}\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Course;\r\n","import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { serverUrl } from \"../../values/server\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport ReactLoading from \"react-loading\";\r\n\r\nconst ForgotPassword = () => {\r\n    window.document.title = \"Change Password | Edifice\";\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const clearFields = () => {\r\n        setEmail(\"\");\r\n    };\r\n\r\n    const showToast = (msg) => {\r\n        toast(msg, {\r\n            style: {\r\n                background: \"var(--errorRed)\",\r\n                color: \"white\",\r\n                textAlign: \"center\",\r\n            },\r\n            position: \"bottom-center\",\r\n            autoClose: 5000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n        });\r\n    };\r\n\r\n    const sendLink = () => {\r\n        setLoading(true);\r\n        if (!email) {\r\n            setLoading(false);\r\n            showToast(\"Enter email\");\r\n            clearFields();\r\n        } else {\r\n            const data = JSON.stringify({\r\n                email: email\r\n            });\r\n            const config = {\r\n                method: \"post\",\r\n                url: `${serverUrl}/users/reset-pass`,\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                data: data,\r\n            };\r\n\r\n            axios(config)\r\n                .then((response) => {\r\n                    setLoading(false);\r\n                    clearFields();\r\n                    showToast(response.data.msg === \"PENDING\" ? \"Already sent!\" : \"Password reset link sent! Please check your inbox.\");\r\n                    console.log(response.data);\r\n                })\r\n                .catch((err) => {\r\n                    if (err.message === \"Request failed with status code 500\") {\r\n                        showToast(\"Invalid email or password\");\r\n                    }\r\n                    setLoading(false);\r\n                    clearFields();\r\n                });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"login-wrapper\">\r\n                <div className=\"login-container\" style={{height: \"auto\"}}>\r\n                    <div className=\"login-header-row\">\r\n                        <img\r\n                            alt=\"logo\"\r\n                            src=\"https://play-lh.googleusercontent.com/SpoozAfBft3HEAvsEV8xHTScJnIzLLWBkt-vb2hONjrsYWn8D7bsm4vKjzp_3-JI4N_K\"\r\n                        />\r\n                        <p>EDIFICE</p>\r\n                    </div>\r\n                    <div className=\"login-header-desc\">\r\n                        <p>Enter your email for password reset link.</p>\r\n                    </div>\r\n                    <div className=\"login-input-container\">\r\n                        <input\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            placeholder=\"Email\"\r\n                            type=\"email\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"login-footer-row\">\r\n                        <div onClick={sendLink} className=\"login-button\">\r\n                            {!loading ? (\r\n                                `Send Link`\r\n                            ) : (\r\n                                <ReactLoading\r\n                                    type={\"spin\"}\r\n                                    color={\"white\"}\r\n                                    width={\"10%\"}\r\n                                    height={\"60%\"}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <ToastContainer />\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { serverUrl } from \"../../values/server\";\r\nimport \"./EnrollCourse.css\";\r\nimport ReactLoading from \"react-loading\";\r\nimport Navbar from \"../../Components/Navbar/Navbar\";\r\nimport \"../../Components/Card/Card.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nfunction EnrollCourse() {\r\n    const { courseId } = useParams();\r\n    const [loading, setLoading] = useState(false);\r\n    const [courseDetails, setCourseDetails] = useState({});\r\n\r\n    const [isEnrolled, setIsEnrolled] = useState(false);\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n        const script = document.createElement(\"script\");\r\n        script.src = \"https://checkout.razorpay.com/v1/checkout.js\";\r\n        script.async = true;\r\n        document.body.appendChild(script);\r\n        getCourseDetails();\r\n        getJoinStatus();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const showToast = (msg) => {\r\n        toast(msg, {\r\n            style: {\r\n                background: \"var(--errorRed)\",\r\n                color: \"white\",\r\n                textAlign: \"center\",\r\n            },\r\n            position: \"bottom-center\",\r\n            autoClose: 5000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n        });\r\n    };\r\n\r\n    const getCourseDetails = () => {\r\n        setLoading(true);\r\n\r\n        const data = JSON.stringify({ _id: courseId });\r\n\r\n        const config = {\r\n            method: \"post\",\r\n            url: `${serverUrl}/lms/get-lmsCourse-by-id`,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `JWT ${localStorage.getItem(\"token\")}`,\r\n            },\r\n            data: data,\r\n        };\r\n\r\n        axios(config).then((response) => {\r\n            setCourseDetails(response.data);\r\n            console.log(response.data);\r\n            setLoading(false);\r\n        });\r\n    };\r\n\r\n    const getJoinStatus = () => {\r\n        setLoading(true);\r\n\r\n        const data = JSON.stringify({ course: courseId });\r\n\r\n        const config = {\r\n            method: \"post\",\r\n            url: `${serverUrl}/lms/get-lmsCourseEnroll-status`,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `JWT ${localStorage.getItem(\"token\")}`,\r\n            },\r\n            data: data,\r\n        };\r\n\r\n        axios(config).then((response) => {\r\n            if (response.data.status === \"Enrolled\") {\r\n                setIsEnrolled(true);\r\n            } else {\r\n                setIsEnrolled(false);\r\n            }\r\n            setLoading(false);\r\n        });\r\n    };\r\n\r\n    const enrollCourse = () => {\r\n        if (courseDetails.paid) return;\r\n        setLoading(true);\r\n\r\n        const data = JSON.stringify({ course: courseId });\r\n\r\n        const config = {\r\n            method: \"post\",\r\n            url: `${serverUrl}/lms/add-lmsCourseEnroll`,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `JWT ${localStorage.getItem(\"token\")}`,\r\n            },\r\n            data: data,\r\n        };\r\n\r\n        axios(config).then((response) => {\r\n            window.location.reload();\r\n            setLoading(false);\r\n        });\r\n    };\r\n\r\n    const pay = () => {\r\n        setLoading(true);\r\n        const data = JSON.stringify({\r\n            amount: courseDetails.fee * 100,\r\n            receipt: \"\",\r\n        });\r\n        const config = {\r\n            method: \"post\",\r\n            url: `${serverUrl}/lms/get-orderid-for-razorpay`,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `JWT ${localStorage.getItem(\"token\")}`,\r\n            },\r\n            data: data,\r\n        };\r\n\r\n        axios(config)\r\n            .then((response) => {\r\n                setLoading(false);\r\n                console.log(response.data);\r\n\r\n                var options = {\r\n                    key: \"rzp_live_nlooAs3MChJzDp\",\r\n                    amount: courseDetails.fee * 100,\r\n                    name: courseDetails.name,\r\n                    description: courseDetails.category.name,\r\n                    order_id: response.data.order_id,\r\n                    theme: {\r\n                        color: \"#32B44A\",\r\n                    },\r\n                };\r\n\r\n                var rzp1 = new window.Razorpay(options);\r\n                rzp1.open();\r\n            })\r\n            .catch((err) => {\r\n                setLoading(false);\r\n                showToast(\"Something went wrong\");\r\n            });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <div className=\"main\">\r\n                <div className=\"card\">\r\n                    {loading ? (\r\n                        <div className=\"loading-spin-container\">\r\n                            <ReactLoading type={\"spin\"} color={\"#00bc4e\"} />\r\n                        </div>\r\n                    ) : (\r\n                        <>\r\n                            <div className=\"title-row\">\r\n                                <div style={{ display: \"flex\" }}>\r\n                                    <div className=\"thumbnail\">\r\n                                        <img\r\n                                            src={\r\n                                                serverUrl +\r\n                                                \"/files/pics/\" +\r\n                                                courseDetails.logo\r\n                                            }\r\n                                            alt=\"\"\r\n                                        ></img>\r\n                                    </div>\r\n                                    <div className=\"column\">\r\n                                        <p>\r\n                                            {courseDetails.name} (\r\n                                            {courseDetails.code})\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                                <button\r\n                                    onClick={() => {\r\n                                        if (isEnrolled) {\r\n                                            history.push(`/course/${courseId}`);\r\n                                        } else if (courseDetails.paid) {\r\n                                            pay();\r\n                                        } else {\r\n                                            enrollCourse();\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    {isEnrolled\r\n                                        ? \"Go to Course\"\r\n                                        : courseDetails.paid\r\n                                        ? \"Pay & Enroll\"\r\n                                        : \"Enroll\"}\r\n                                </button>\r\n                            </div>\r\n                            <p>{courseDetails.description}</p>\r\n                        </>\r\n                    )}\r\n                </div>\r\n                <div\r\n                    className=\"top\"\r\n                    style={{\r\n                        backgroundImage: `url(${\r\n                            serverUrl + \"/files/pics/\" + courseDetails.logo\r\n                        })`,\r\n                    }}\r\n                >\r\n                    <div className=\"gradient\"></div>\r\n                </div>\r\n                <div className=\"bottom\"></div>\r\n            </div>\r\n            <ToastContainer/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EnrollCourse;\r\n","import \"./App.css\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Home from \"./Pages/Home/Home\";\r\nimport Login from \"./Pages/Login/Login\";\r\nimport Course from \"./Pages/Course/Course\";\r\nimport ForgotPassword from \"./Pages/ForgotPassword/ForgotPassword\";\r\nimport EnrollCourse from \"./Pages/EnrollCourse/EnrollCourse\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <>\r\n            <Router>\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={localStorage.getItem(\"token\") !== null ? Home : Login} />\r\n                    <Route exact path=\"/login\" component={Login} />\r\n                    <Route exact path=\"/forgot-password\" component={ForgotPassword} />\r\n                    <Route exact path=\"/course/:courseId\" component={Course} />\r\n                    <Route exact path=\"/course/enroll/:courseId\" component={EnrollCourse} />\r\n                </Switch>\r\n            </Router>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}