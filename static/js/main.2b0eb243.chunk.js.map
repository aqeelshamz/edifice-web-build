{"version":3,"sources":["Components/Navbar/Navbar.js","Components/Card/Card.js","values/server.js","Pages/Home/Home.js","Pages/Login/Login.js","Pages/Course/Course.js","Pages/ForgotPassword/ForgotPassword.js","Pages/EnrollCourse/EnrollCourse.js","Pages/CourseProvider/CourseProvider.js","Pages/CourseProvider/Jamia.js","Pages/Register/Register.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","useState","authenticated","setAuthenticated","useEffect","localStorage","getItem","history","useHistory","className","onClick","push","alt","src","removeItem","window","location","reload","Card","courseName","courseType","thumbnail","courseId","toEnroll","style","toUpperCase","color","serverUrl","Home","document","title","loading","setLoading","myCourses","setMyCourses","allCourses","setAllCourses","courseTags","setCourseTags","courseProviders","setCourseProviders","getMyCourses","getAllCourses","getCourseProviders","replace","data","JSON","stringify","config","method","url","headers","Authorization","axios","then","response","getTags","tags","course","tag","includes","console","log","type","length","map","name","logo","_id","provider","paid","Login","email","setEmail","password","setPassword","showToast","msg","toast","background","textAlign","position","autoClose","hideProgressBar","closeOnClick","resetForm","login","a","org_id","username","setItem","user","token","catch","err","message","placeholder","value","onChange","e","target","id","to","width","height","Course","lessons","setLessons","currentLessonId","setCurrentLessonId","currentVideo","setCurrentVideo","currentLessonName","setCurrentLessonName","currentBody","setCurrentBody","useParams","getJoinStatus","status","every","isExam","youtube_parser","ytLink","body","forEach","arr","fetchLessons","lessonId","lesson","match","videoId","opts","playerVars","modestbranding","rel","showinfo","markAttendance","scrollTo","ForgotPassword","EnrollCourse","uploadingCertificate","setUploadingCertificate","courseDetails","setCourseDetails","isEnrolled","setIsEnrolled","certificate","setCertificate","marksPercentage","setMarksPercentage","whatsApp","setWhatsApp","script","createElement","async","appendChild","getCourseDetails","enrollCourse","pay","amount","fee","receipt","options","key","razorpayKeyId","handler","response1","undefined","razorpay_order_id","description","category","order_id","theme","Razorpay","open","registerAndEnroll","whatsapp","setShowRegModal","showRegModal","overflowX","isOpen","content","borderRadius","top","left","right","bottom","marginRight","transform","overlay","zIndex","backgroundColor","maxWidth","file","myHeaders","Headers","append","formdata","FormData","requestOptions","redirect","fetch","text","result","parse","fileName","error","uploadCertificate","files","min","max","display","code","backgroundImage","CourseProvider","courses","setCourses","providerDetails","setProviderDetails","providerId","getProviderDetails","coursesList","getCourses","marginTop","Jamia","Register","setName","phone","setPhone","address","setAddress","gender","setGender","register","number","birthDate","class","father","costCenter","divisions","name_ar","classForm","limit","orderNumber","__v","division","setTimeout","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2b0eb243.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./Navbar.css\";\r\n\r\nconst Navbar = () => {\r\n    const [authenticated, setAuthenticated] = useState(false);\r\n\r\n    useEffect(() => {\r\n        localStorage.getItem(\"token\") === null\r\n            ? setAuthenticated(false)\r\n            : setAuthenticated(true);\r\n    }, []);\r\n\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <nav className=\"navbar-container\">\r\n            <div className=\"navbar-left-portion\" onClick={()=>{history.push(\"/\")}}>\r\n                <img\r\n                    alt=\"logo\"\r\n                    src=\"https://play-lh.googleusercontent.com/SpoozAfBft3HEAvsEV8xHTScJnIzLLWBkt-vb2hONjrsYWn8D7bsm4vKjzp_3-JI4N_K\"\r\n                />\r\n                <p>Edifice</p>\r\n            </div>\r\n            <div className=\"navbar-right-portion\">\r\n                {authenticated ? (\r\n                    <p\r\n                        onClick={() => {\r\n                            localStorage.removeItem(\"token\");\r\n                            history.push(\"/\");\r\n                            window.location.reload();\r\n                        }}\r\n                    >\r\n                        LOGOUT\r\n                    </p>\r\n                ) : (\r\n                    <p onClick={() => history.push(\"/login\")}>LOGIN</p>\r\n                )}\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./Card.css\";\r\n\r\nconst Card = ({ courseName, courseType, thumbnail, courseId, toEnroll }) => {\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <div\r\n            onClick={() => history.push(toEnroll ? `/course/enroll/${courseId}` : `/course/${courseId}`)}\r\n            className=\"course-card\"\r\n        >\r\n            <div>\r\n                <div className=\"thumbnail\">\r\n                    <img src={thumbnail} alt=\"\"></img>\r\n                </div>\r\n            </div>\r\n            <p>{courseName}</p>\r\n            <p\r\n                style={\r\n                    courseType.toUpperCase() === \"PREMIUM\"\r\n                        ? { color: \"orange\" }\r\n                        : courseType.toUpperCase() === \"FREE\"\r\n                        ? { color: \"var(--edificeGreen)\" }\r\n                        : { color: \"grey\" }\r\n                }\r\n            >\r\n                {courseType.toUpperCase()}\r\n            </p>\r\n        </div>\r\n        // <div className=\"homepage-course-card\">\r\n        //     <div>\r\n        //         <div></div>\r\n        //     </div>\r\n        //     <p>Lorem ipsum sample Course</p>\r\n        //     <p\r\n        //         style={\r\n        //             courseType.toUpperCase() === \"PREMIUM\"\r\n        //                 ? { color: \"orange\" }\r\n        //                 : courseType.toUpperCase() === \"FREE\"\r\n        //                 ? { color: \"green\" }\r\n        //                 : null\r\n        //         }\r\n        //     >\r\n        //         {courseType.toUpperCase()}\r\n        //     </p>\r\n        // </div>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","const serverUrl = \"http://edificeapp.wisdomislam.org\";\r\n\r\nexport { serverUrl };\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Home.css\";\r\nimport Navbar from \"../../Components/Navbar/Navbar\";\r\nimport Card from \"../../Components/Card/Card\";\r\nimport axios from \"axios\";\r\nimport { serverUrl } from \"../../values/server\";\r\nimport ReactLoading from \"react-loading\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Home = () => {\r\n    window.document.title = \"Home | Edifice\";\r\n\r\n    const [loading, setLoading] = useState([]);\r\n    const [myCourses, setMyCourses] = useState([]);\r\n\r\n    const [allCourses, setAllCourses] = useState([]);\r\n\r\n    const [courseTags, setCourseTags] = useState([]);\r\n    const [courseProviders, setCourseProviders] = useState([]);\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"token\") !== null) {\r\n            getMyCourses();\r\n            getAllCourses();\r\n            getCourseProviders();\r\n        } else {\r\n            history.replace(\"/login\");\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [history]);\r\n\r\n    const getMyCourses = () => {\r\n        setLoading(true);\r\n\r\n        const data = JSON.stringify({});\r\n\r\n        const config = {\r\n            method: \"post\",\r\n            url: `${serverUrl}/lms/get-lmsCourseEnroll-list`,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `JWT ${localStorage.getItem(\"token\")}`,\r\n            },\r\n            data: data,\r\n        };\r\n\r\n        axios(config).then((response) => {\r\n            setMyCourses(response.data);\r\n        });\r\n    };\r\n\r\n    const getAllCourses = () => {\r\n        setLoading(true);\r\n\r\n        const data = JSON.stringify({});\r\n\r\n        const config = {\r\n            method: \"post\",\r\n            url: `${serverUrl}/lms/get-lmsCourse-list-v2`,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `JWT ${localStorage.getItem(\"token\")}`,\r\n            },\r\n            data: data,\r\n        };\r\n\r\n        axios(config).then((response) => {\r\n            setAllCourses(response.data);\r\n            getTags(response.data);\r\n        });\r\n    };\r\n\r\n    const getTags = (allCourses) => {\r\n        let tags = [];\r\n        for (const course of allCourses) {\r\n            for (const tag of course.tags) {\r\n                if (!tags.includes(tag)) {\r\n                    tags.push(tag);\r\n                }\r\n            }\r\n        }\r\n\r\n        setCourseTags(tags);\r\n    };\r\n\r\n    const getCourseProviders = () => {\r\n        setLoading(true);\r\n\r\n        const data = JSON.stringify({});\r\n\r\n        const config = {\r\n            method: \"post\",\r\n            url: `${serverUrl}/lms/get-lmsCourseProvider-list`,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `JWT ${localStorage.getItem(\"token\")}`,\r\n            },\r\n            data: data,\r\n        };\r\n\r\n        axios(config).then((response) => {\r\n            console.log(response.data);\r\n            setCourseProviders(response.data);\r\n            setLoading(false);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <section>\r\n                <div className=\"homepage-header top-margin\">\r\n                    <p>My Courses</p>\r\n                    <div></div>\r\n                </div>\r\n                <div className=\"homepage-course-cards-list\">\r\n                    {loading ? (\r\n                        <div className=\"loading-spin-container\">\r\n                            <ReactLoading type={\"spinningBubbles\"} color={\"#00bc4e\"} />\r\n                        </div>\r\n                    ) : myCourses.length === 0 ? (\r\n                        <div className=\"loading-spin-container\">\r\n                            Enrolled Courses will appear here\r\n                        </div>\r\n                    ) : (\r\n                        myCourses.map((course) => (\r\n                            <Card\r\n                                courseName={course.course.name}\r\n                                courseType=\"\"\r\n                                thumbnail={\r\n                                    serverUrl +\r\n                                    \"/files/pics/\" +\r\n                                    course.course.logo\r\n                                }\r\n                                courseId={course.course._id}\r\n                                toEnroll={false}\r\n                            />\r\n                        ))\r\n                    )}\r\n                </div>\r\n            </section>\r\n            {loading ? (\r\n                \"\"\r\n            ) : (\r\n                <section>\r\n                    <div className=\"homepage-header\">\r\n                        <p>Course Providers</p>\r\n                        <div></div>\r\n                    </div>\r\n                    <div className=\"homepage-course-provider-list\">\r\n                        {courseProviders.map((provider) => (\r\n                            <button\r\n                                onClick={() => {\r\n                                    history.push(`/provider/${provider._id}`);\r\n                                }}\r\n                            >\r\n                                {provider.name}\r\n                            </button>\r\n                        ))}\r\n                    </div>\r\n                </section>\r\n            )}\r\n            {loading\r\n                ? \"\"\r\n                : courseTags.map((tag) => {\r\n                      return (\r\n                          <section>\r\n                              <div className=\"homepage-header\">\r\n                                  <p>{tag}</p>\r\n                                  <div></div>\r\n                              </div>\r\n                              <div className=\"homepage-course-cards-list\">\r\n                                  {allCourses.map((course) =>\r\n                                      !course.tags.includes(tag) ? (\r\n                                          \"\"\r\n                                      ) : (\r\n                                          <Card\r\n                                              courseName={course.name}\r\n                                              courseType={\r\n                                                  course.paid\r\n                                                      ? \"PREMIUM\"\r\n                                                      : \"FREE\"\r\n                                              }\r\n                                              thumbnail={\r\n                                                  serverUrl +\r\n                                                  \"/files/pics/\" +\r\n                                                  course.logo\r\n                                              }\r\n                                              courseId={course._id}\r\n                                              toEnroll={true}\r\n                                          />\r\n                                      )\r\n                                  )}\r\n                              </div>\r\n                          </section>\r\n                      );\r\n                  })}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport \"react-toastify/dist/ReactToastify.min.css\";\r\nimport axios from \"axios\";\r\nimport \"./LoginRegister.css\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport ReactLoading from \"react-loading\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { serverUrl } from \"../../values/server\";\r\n\r\nfunction Login() {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const showToast = (msg) => {\r\n        toast(msg, {\r\n            style: {\r\n                background: \"white\",\r\n                color: \"var(--edificeGreen)\",\r\n                textAlign: \"center\",\r\n            },\r\n            position: \"bottom-center\",\r\n            autoClose: 5000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n        });\r\n    };\r\n\r\n    const resetForm = () => {\r\n        setEmail(\"\");\r\n        setPassword(\"\");\r\n        setLoading(false);\r\n    };\r\n\r\n    const login = async () => {\r\n        setLoading(true);\r\n        if (!email || !password) {\r\n            setLoading(false);\r\n            showToast(\"Email and Password must not be empty\");\r\n            resetForm();\r\n        } else {\r\n            const data = JSON.stringify({\r\n                org_id: \"5f143f5d93c1f321f663aaf6\",\r\n                username: email,\r\n                password: password,\r\n            });\r\n            const config = {\r\n                method: \"post\",\r\n                url: `${serverUrl}/users/authenticate`,\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                data: data,\r\n            };\r\n\r\n            axios(config)\r\n                .then((response) => {\r\n                    localStorage.setItem(\"token\", response.data.user.token);\r\n                    history.push(\"/\");\r\n                    setLoading(false);\r\n                    resetForm();\r\n                    console.log(response.data.user.token);\r\n                    window.location.reload();\r\n                })\r\n                .catch((err) => {\r\n                    if (err.message === \"Request failed with status code 500\") {\r\n                        showToast(\"Invalid email or password\");\r\n                    }\r\n                    setLoading(false);\r\n                    resetForm();\r\n                });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <div className=\"bg\">\r\n                <div className=\"form-container\">\r\n                    <div className=\"logo-container\">\r\n                        <img\r\n                            src=\"https://play-lh.googleusercontent.com/SpoozAfBft3HEAvsEV8xHTScJnIzLLWBkt-vb2hONjrsYWn8D7bsm4vKjzp_3-JI4N_K\"\r\n                            alt=\"Logo\"\r\n                        />\r\n                        <p>Edifice</p>\r\n                    </div>\r\n                    <div className=\"form\">\r\n                        <p>Email address</p>\r\n                        <input\r\n                            type=\"email\"\r\n                            placeholder=\"Email\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n                        <p>Password</p>\r\n                        <input\r\n                            id=\"passinput\"\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                        <div className=\"forgotpass-link\">\r\n                            <Link to=\"/forgot-password\">Forgot Password</Link>\r\n                        </div>\r\n                        <button onClick={login}>\r\n                            {loading ? (\r\n                                <ReactLoading\r\n                                    type={\"spinningBubbles\"}\r\n                                    color={\"white\"}\r\n                                    width={\"1rem\"}\r\n                                    height={\"1rem\"}\r\n                                />\r\n                            ) : (\r\n                                \"Login\"\r\n                            )}\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"link-container\">\r\n                        <p>\r\n                            Don't have an account?\r\n                            <Link to=\"/register\">Register</Link>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <ToastContainer />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router\";\r\nimport { serverUrl } from \"../../values/server\";\r\nimport \"./Course.css\";\r\nimport YouTube from \"react-youtube\";\r\nimport Navbar from \"../../Components/Navbar/Navbar\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ReactLoading from \"react-loading\";\r\n\r\nconst Course = ({ courseName }) => {\r\n    window.document.title = \"Loading Lessons.. | Edifice\";\r\n    const [lessons, setLessons] = useState([]);\r\n    const [currentLessonId, setCurrentLessonId] = useState(\"\");\r\n    const [currentVideo, setCurrentVideo] = useState(\"\");\r\n    const [currentLessonName, setCurrentLessonName] = useState(\"\");\r\n    const [currentBody, setCurrentBody] = useState(\"\");\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const { courseId } = useParams();\r\n    const history = useHistory();\r\n\r\n    if (!localStorage.getItem(\"token\")) {\r\n        history.push(\"/\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        getJoinStatus();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const fetchLessons = () => {\r\n        console.log(\"loading lessons....\");\r\n        const data = JSON.stringify({ course: courseId });\r\n\r\n        const config = {\r\n            method: \"post\",\r\n            url: `${serverUrl}/lms/get-lmsLesson-list`,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `JWT ${localStorage.getItem(\"token\")}`,\r\n            },\r\n            data: data,\r\n        };\r\n\r\n        axios(config).then((response) => {\r\n            response.data.every((data) => {\r\n                if (!data.isExam) {\r\n                    setCurrentVideo(youtube_parser(data.ytLink));\r\n                    setCurrentLessonName(data.name);\r\n                    setCurrentBody(data.body);\r\n                    setCurrentLessonId(data._id);\r\n                    window.document.title = data.name + \" - Edifice\";\r\n                    return false;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            response.data.forEach((data) => {\r\n                setLessons((arr) => [\r\n                    ...arr,\r\n                    {\r\n                        id: data._id,\r\n                        name: data.name,\r\n                        ytLink: data.ytLink,\r\n                        isExam: data.isExam,\r\n                        body: data.body,\r\n                    },\r\n                ]);\r\n            });\r\n            setLoading(false);\r\n        });\r\n    };\r\n\r\n    const getJoinStatus = () => {\r\n        setLoading(true);\r\n        const data = JSON.stringify({ course: courseId });\r\n\r\n        const config = {\r\n            method: \"post\",\r\n            url: `${serverUrl}/lms/get-lmsCourseEnroll-status`,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `JWT ${localStorage.getItem(\"token\")}`,\r\n            },\r\n            data: data,\r\n        };\r\n\r\n        axios(config).then((response) => {\r\n            console.log(response.data);\r\n\r\n            if (response.data.status === \"Enrolled\") {\r\n                fetchLessons();\r\n            } else {\r\n                history.replace(\"/\");\r\n            }\r\n        });\r\n    };\r\n\r\n    async function markAttendance(lessonId) {\r\n        const data = JSON.stringify({ lesson: lessonId });\r\n        const config = {\r\n            method: \"post\",\r\n            url: `${serverUrl}/lms/get-lmsAttendance`,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `JWT ${localStorage.getItem(\"token\")}`,\r\n            },\r\n            data: data,\r\n        };\r\n\r\n        await axios(config);\r\n    }\r\n\r\n    const youtube_parser = (url) => {\r\n        var regExp =\r\n            /^https?:\\/\\/(?:www\\.youtube(?:-nocookie)?\\.com\\/|m\\.youtube\\.com\\/|youtube\\.com\\/)?(?:ytscreeningroom\\?vi?=|youtu\\.be\\/|vi?\\/|user\\/.+\\/u\\/\\w{1,2}\\/|embed\\/|watch\\?(?:.*&)?vi?=|&vi?=|\\?(?:.*&)?vi?=)([^#&?\\n/<>\"']*)/i;\r\n        var match = url.match(regExp);\r\n        return match && match[1].length === 11 ? match[1] : false;\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <div className=\"course-page-container top-margin\">\r\n                {loading ? (\r\n                    <div className=\"loading-spin-container\">\r\n                        <ReactLoading type={\"spinningBubbles\"} color={\"#00bc4e\"} />\r\n                    </div>\r\n                ) : (\r\n                    <>\r\n                        <div className=\"course-page-video-container\">\r\n                            <YouTube\r\n                                className=\"yt-player\"\r\n                                videoId={currentVideo}\r\n                                opts={{\r\n                                    width: \"100%\",\r\n                                    height: \"100%\",\r\n                                    playerVars: {\r\n                                        modestbranding: 1,\r\n                                        rel: 0,\r\n                                        showinfo: 0,\r\n                                    },\r\n                                }}\r\n                            />\r\n                            <p className=\"ytTitle\">{currentLessonName}</p>\r\n                            <p className=\"ytBody\">{currentBody}</p>\r\n                        </div>\r\n                        <div className=\"course-name-lessons-container\">\r\n                            {lessons.map((lesson) =>\r\n                                !lesson.isExam ? (\r\n                                    <div\r\n                                        key={lesson.id}\r\n                                        className={\r\n                                            currentLessonId === lesson.id\r\n                                                ? \"active-lesson-card\"\r\n                                                : \"\"\r\n                                        }\r\n                                        onClick={() => {\r\n                                            setCurrentVideo(\r\n                                                youtube_parser(lesson.ytLink)\r\n                                            );\r\n                                            setCurrentLessonName(lesson.name);\r\n                                            setCurrentBody(lesson.body);\r\n                                            setCurrentLessonId(lesson.id);\r\n                                            markAttendance(lesson.id);\r\n                                            window.document.title =\r\n                                                lesson.name + \" | Edifice\";\r\n                                            window.scrollTo(0, 0);\r\n                                        }}\r\n                                    >\r\n                                        <p>{lesson.name}</p>\r\n                                        <p>{lesson.body}</p>\r\n                                    </div>\r\n                                ) : null\r\n                            )}\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Course;\r\n","import React, { useState } from \"react\";\r\nimport \"react-toastify/dist/ReactToastify.min.css\";\r\nimport axios from \"axios\";\r\nimport \"../Login/LoginRegister.css\";\r\nimport ReactLoading from \"react-loading\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { serverUrl } from \"../../values/server\";\r\n\r\nfunction ForgotPassword() {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const showToast = (msg) => {\r\n        toast(msg, {\r\n            style: {\r\n                background: \"white\",\r\n                color: \"var(--edificeGreen)\",\r\n                textAlign: \"center\",\r\n            },\r\n            position: \"bottom-center\",\r\n            autoClose: 5000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n        });\r\n    };\r\n\r\n    const resetForm = () => {\r\n        setEmail(\"\");\r\n        setLoading(false);\r\n    };\r\n\r\n    const sendLink = () => {\r\n        setLoading(true);\r\n        if (!email) {\r\n            setLoading(false);\r\n            showToast(\"Enter email\");\r\n            resetForm();\r\n        } else {\r\n            const data = JSON.stringify({\r\n                email: email,\r\n            });\r\n            const config = {\r\n                method: \"post\",\r\n                url: `${serverUrl}/users/reset-pass`,\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                data: data,\r\n            };\r\n\r\n            axios(config)\r\n                .then((response) => {\r\n                    setLoading(false);\r\n                    resetForm();\r\n                    showToast(\r\n                        response.data.msg === \"PENDING\"\r\n                            ? \"Already sent!\"\r\n                            : \"Password reset link sent! Please check your inbox.\"\r\n                    );\r\n                    console.log(response.data);\r\n                })\r\n                .catch((err) => {\r\n                    if (err.message === \"Request failed with status code 500\") {\r\n                        showToast(\"Invalid email or password\");\r\n                    }\r\n                    setLoading(false);\r\n                    resetForm();\r\n                });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <div className=\"bg\">\r\n                <div className=\"form-container\">\r\n                    <div className=\"logo-container\">\r\n                        <img\r\n                            src=\"https://play-lh.googleusercontent.com/SpoozAfBft3HEAvsEV8xHTScJnIzLLWBkt-vb2hONjrsYWn8D7bsm4vKjzp_3-JI4N_K\"\r\n                            alt=\"Logo\"\r\n                        />\r\n                        <p>Edifice</p>\r\n                    </div>\r\n                    <div className=\"form\">\r\n                        <p>Enter your email for password reset link.</p>\r\n                        <input\r\n                            type=\"email\"\r\n                            placeholder=\"Email\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n                        <button onClick={sendLink}>\r\n                            {loading ? (\r\n                                <ReactLoading\r\n                                    type={\"spinningBubbles\"}\r\n                                    color={\"white\"}\r\n                                    width={\"1rem\"}\r\n                                    height={\"1rem\"}\r\n                                />\r\n                            ) : (\r\n                                \"Send Link\"\r\n                            )}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <ToastContainer />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ForgotPassword;\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { serverUrl } from \"../../values/server\";\r\nimport \"./EnrollCourse.css\";\r\nimport ReactLoading from \"react-loading\";\r\nimport Navbar from \"../../Components/Navbar/Navbar\";\r\nimport \"../../Components/Card/Card.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Modal from \"react-modal\";\r\n\r\nfunction EnrollCourse() {\r\n    const { courseId } = useParams();\r\n    const [loading, setLoading] = useState(false);\r\n    const [uploadingCertificate, setUploadingCertificate] = useState(false);\r\n    const [courseDetails, setCourseDetails] = useState({});\r\n\r\n    const [isEnrolled, setIsEnrolled] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const [certificate, setCertificate] = useState(\"\");\r\n    const [marksPercentage, setMarksPercentage] = useState(0);\r\n    const [whatsApp, setWhatsApp] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n        const script = document.createElement(\"script\");\r\n        script.src = \"https://checkout.razorpay.com/v1/checkout.js\";\r\n        script.async = true;\r\n        document.body.appendChild(script);\r\n        getCourseDetails();\r\n        getJoinStatus();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const showToast = (msg) => {\r\n        toast(msg, {\r\n            style: {\r\n                background: \"var(--edificeGreen)\",\r\n                color: \"white\",\r\n                textAlign: \"center\",\r\n            },\r\n            position: \"bottom-center\",\r\n            autoClose: 5000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n        });\r\n    };\r\n\r\n    const getCourseDetails = () => {\r\n        setLoading(true);\r\n\r\n        const data = JSON.stringify({ _id: courseId });\r\n\r\n        const config = {\r\n            method: \"post\",\r\n            url: `${serverUrl}/lms/get-lmsCourse-by-id`,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `JWT ${localStorage.getItem(\"token\")}`,\r\n            },\r\n            data: data,\r\n        };\r\n\r\n        axios(config).then((response) => {\r\n            setCourseDetails(response.data);\r\n            console.log(response.data);\r\n            setLoading(false);\r\n        });\r\n    };\r\n\r\n    const getJoinStatus = () => {\r\n        setLoading(true);\r\n\r\n        const data = JSON.stringify({ course: courseId });\r\n\r\n        const config = {\r\n            method: \"post\",\r\n            url: `${serverUrl}/lms/get-lmsCourseEnroll-status`,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `JWT ${localStorage.getItem(\"token\")}`,\r\n            },\r\n            data: data,\r\n        };\r\n\r\n        axios(config).then((response) => {\r\n            if (response.data.status === \"Enrolled\") {\r\n                setIsEnrolled(true);\r\n            } else {\r\n                setIsEnrolled(false);\r\n            }\r\n            setLoading(false);\r\n        });\r\n    };\r\n\r\n    const enrollCourse = () => {\r\n        setLoading(true);\r\n\r\n        const data = JSON.stringify({ course: courseId });\r\n\r\n        const config = {\r\n            method: \"post\",\r\n            url: `${serverUrl}/lms/add-lmsCourseEnroll`,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `JWT ${localStorage.getItem(\"token\")}`,\r\n            },\r\n            data: data,\r\n        };\r\n\r\n        axios(config).then((response) => {\r\n            window.location.reload();\r\n            setLoading(false);\r\n        });\r\n    };\r\n\r\n    const pay = () => {\r\n        setLoading(true);\r\n        const data = JSON.stringify({\r\n            amount: courseDetails.fee * 100,\r\n            receipt: \"\",\r\n        });\r\n        const config = {\r\n            method: \"post\",\r\n            url: `${serverUrl}/lms/get-orderid-for-razorpay`,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `JWT ${localStorage.getItem(\"token\")}`,\r\n            },\r\n            data: data,\r\n        };\r\n\r\n        axios(config)\r\n            .then((response) => {\r\n                setLoading(false);\r\n                var options = {\r\n                    key: courseDetails.provider.razorpayKeyId,\r\n                    amount: courseDetails.fee * 100,\r\n                    name: courseDetails.name,\r\n                    handler: function (response1) {\r\n                        if (response1.razorpay_order_id !== undefined) {\r\n                            enrollCourse();\r\n                        }\r\n                    },\r\n                    description: courseDetails.category.name,\r\n                    order_id: response.data.order_id,\r\n                    theme: {\r\n                        color: \"#32B44A\",\r\n                    },\r\n                };\r\n\r\n                var rzp1 = new window.Razorpay(options);\r\n                rzp1.open();\r\n            })\r\n            .catch((err) => {\r\n                setLoading(false);\r\n                showToast(\"Something went wrong\");\r\n            });\r\n    };\r\n\r\n    const uploadCertificate = (file) => {\r\n        setUploadingCertificate(true);\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\r\n            \"Authorization\",\r\n            `JWT ${localStorage.getItem(\"token\")}`\r\n        );\r\n\r\n        var formdata = new FormData();\r\n        formdata.append(\"doc\", file);\r\n\r\n        var requestOptions = {\r\n            method: \"POST\",\r\n            headers: myHeaders,\r\n            body: formdata,\r\n            redirect: \"follow\",\r\n        };\r\n\r\n        fetch(`${serverUrl}/contacts/upload-certificate-image`, requestOptions)\r\n            .then((response) => response.text())\r\n            .then((result) => {\r\n                console.log(result);\r\n                showToast(\"Certificate uploaded!\");\r\n                setCertificate(JSON.parse(result).fileName);\r\n                setUploadingCertificate(false);\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"ERR\");\r\n                console.log(error);\r\n                showToast(\"Something went wrong. Please try again\");\r\n                setUploadingCertificate(false);\r\n            });\r\n    };\r\n\r\n    const registerAndEnroll = async () => {\r\n        if (certificate === \"\") return showToast(\"Upload certificate\");\r\n        if (marksPercentage > 100)\r\n            return showToast(\"Marks percentage should be between 0 and 100\");\r\n\r\n        if (courseDetails.paid) {\r\n            pay();\r\n        } else {\r\n            const config = {\r\n                method: \"post\",\r\n                url: `${serverUrl}/contacts/update-org-set`,\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `JWT ${localStorage.getItem(\"token\")}`,\r\n                },\r\n                data: {\r\n                    certificate: certificate,\r\n                    marksPercentage: marksPercentage,\r\n                    whatsapp: whatsApp,\r\n                },\r\n            };\r\n\r\n            axios(config)\r\n                .then((response) => {\r\n                    setShowRegModal(false);\r\n                    enrollCourse();\r\n                })\r\n                .catch((err) => {\r\n                    toast(\"Something went wrong\");\r\n                    setLoading(false);\r\n                });\r\n        }\r\n    };\r\n\r\n    const [showRegModal, setShowRegModal] = useState(false);\r\n\r\n    return (\r\n        <div style={{ overflowX: \"hidden\" }}>\r\n            <Modal\r\n                isOpen={showRegModal}\r\n                style={{\r\n                    content: {\r\n                        borderRadius: \"1rem\",\r\n                        top: \"50%\",\r\n                        left: \"50%\",\r\n                        right: \"auto\",\r\n                        bottom: \"auto\",\r\n                        marginRight: \"-50%\",\r\n                        transform: \"translate(-50%, -50%)\",\r\n                    },\r\n                    overlay: {\r\n                        overflowX: \"hidden\",\r\n                        zIndex: \"200\",\r\n                        backgroundColor: \"rgba(0,0,0,0.7)\",\r\n                    },\r\n                }}\r\n            >\r\n                <div className=\"modalContent\">\r\n                    <p className=\"modalTitle\" style={{ maxWidth: \"450px\" }}>\r\n                        {courseDetails.provider?.name} Registration\r\n                    </p>\r\n                    <p>Upload Certificate</p>\r\n                    <input\r\n                        onChange={(e) => uploadCertificate(e.target.files[0])}\r\n                        type=\"file\"\r\n                    />\r\n                    <p>Marks Obtained in Percentage</p>\r\n                    <input\r\n                        onChange={(e) => setMarksPercentage(e.target.value)}\r\n                        value={marksPercentage}\r\n                        min=\"0\"\r\n                        max=\"100\"\r\n                        placeholder=\"Marks Percentage\"\r\n                        type=\"number\"\r\n                    />\r\n                    <p>WhatsApp</p>\r\n                    <input\r\n                        onChange={(e) => setWhatsApp(e.target.value)}\r\n                        value={whatsApp}\r\n                        placeholder=\"WhatsApp Number\"\r\n                        type=\"text\"\r\n                    />\r\n                    {uploadingCertificate ? (\r\n                        \"\"\r\n                    ) : (\r\n                        <>\r\n                            <button\r\n                                onClick={() => {\r\n                                    registerAndEnroll();\r\n                                }}\r\n                            >\r\n                                Register & Enroll\r\n                            </button>\r\n                            <button\r\n                                id=\"cancelbtn\"\r\n                                onClick={() => {\r\n                                    setShowRegModal(false);\r\n                                }}\r\n                            >\r\n                                Cancel\r\n                            </button>\r\n                        </>\r\n                    )}\r\n                </div>\r\n            </Modal>\r\n            <Navbar />\r\n            <div className=\"main\">\r\n                <div className=\"card\">\r\n                    {loading ? (\r\n                        <div className=\"loading-spin-container\">\r\n                            <ReactLoading\r\n                                type={\"spinningBubbles\"}\r\n                                color={\"#00bc4e\"}\r\n                            />\r\n                        </div>\r\n                    ) : (\r\n                        <>\r\n                            <div className=\"title-row\">\r\n                                <div style={{ display: \"flex\" }}>\r\n                                    <div className=\"thumbnail\">\r\n                                        <img\r\n                                            src={\r\n                                                serverUrl +\r\n                                                \"/files/pics/\" +\r\n                                                courseDetails.logo\r\n                                            }\r\n                                            alt=\"\"\r\n                                        ></img>\r\n                                    </div>\r\n                                    <div className=\"column\">\r\n                                        <p>\r\n                                            {courseDetails.name} (\r\n                                            {courseDetails.code})\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                                <button\r\n                                    onClick={() => {\r\n                                        if (isEnrolled) {\r\n                                            history.push(`/course/${courseId}`);\r\n                                        } else if (\r\n                                            courseDetails.provider._id ===\r\n                                            \"6145930f2d14ca0442d533d1\"\r\n                                        ) {\r\n                                            setShowRegModal(true);\r\n                                        } else if (courseDetails.paid) {\r\n                                            pay();\r\n                                        } else {\r\n                                            enrollCourse();\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    {isEnrolled\r\n                                        ? \"Go to Course\"\r\n                                        : courseDetails.paid\r\n                                        ? \"Pay & Enroll\"\r\n                                        : \"Enroll\"}\r\n                                </button>\r\n                            </div>\r\n                            <p>{courseDetails.description}</p>\r\n                        </>\r\n                    )}\r\n                </div>\r\n                <div\r\n                    className=\"top\"\r\n                    style={{\r\n                        backgroundImage: `url(${\r\n                            serverUrl + \"/files/pics/\" + courseDetails.logo\r\n                        })`,\r\n                    }}\r\n                >\r\n                    <div className=\"gradient\"></div>\r\n                </div>\r\n                <div className=\"bottom\"></div>\r\n            </div>\r\n            <ToastContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EnrollCourse;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Navbar from \"../../Components/Navbar/Navbar\";\r\nimport \"./CourseProvider.css\";\r\nimport { serverUrl } from \"../../values/server\";\r\nimport axios from \"axios\";\r\nimport Card from \"../../Components/Card/Card\";\r\nimport { useParams } from \"react-router\";\r\nimport ReactLoading from \"react-loading\";\r\n\r\nfunction CourseProvider() {\r\n    const [loading, setLoading] = useState(false);\r\n    const [courses, setCourses] = useState([]);\r\n    const [providerDetails, setProviderDetails] = useState({});\r\n\r\n    const { providerId } = useParams();\r\n\r\n    const getProviderDetails = () => {\r\n        setLoading(true);\r\n\r\n        const data = JSON.stringify({ _id: providerId });\r\n\r\n        const config = {\r\n            method: \"post\",\r\n            url: `${serverUrl}/lms/get-lmsCourseProvider-by-id`,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `JWT ${localStorage.getItem(\"token\")}`,\r\n            },\r\n            data: data,\r\n        };\r\n\r\n        axios(config).then((response) => {\r\n            setProviderDetails(response.data);\r\n        });\r\n    };\r\n\r\n    const getCourses = () => {\r\n        setLoading(true);\r\n\r\n        const data = JSON.stringify({});\r\n\r\n        const config = {\r\n            method: \"post\",\r\n            url: `${serverUrl}/lms/get-lmsCourse-list-v2`,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `JWT ${localStorage.getItem(\"token\")}`,\r\n            },\r\n            data: data,\r\n        };\r\n\r\n        axios(config).then((response) => {\r\n            let coursesList = [];\r\n            for (const course of response.data) {\r\n                if (course.provider._id === providerId) {\r\n                    coursesList.push(course);\r\n                }\r\n            }\r\n            setCourses(coursesList);\r\n            setLoading(false);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getProviderDetails();\r\n        getCourses();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            {loading ? (\r\n                <div\r\n                    className=\"loading-spin-container\"\r\n                    style={{ marginTop: \"4rem\" }}\r\n                >\r\n                    <ReactLoading type={\"spinningBubbles\"} color={\"#00bc4e\"} />\r\n                </div>\r\n            ) : (\r\n                <section>\r\n                    <div className=\"homepage-header top-margin\">\r\n                        <p>Courses from {providerDetails.name}</p>\r\n                        <div></div>\r\n                    </div>\r\n                    <div className=\"homepage-course-cards-list\">\r\n                        {courses.length === 0 ? (\r\n                            <div className=\"loading-spin-container\">\r\n                                No courses from {providerDetails.name}\r\n                            </div>\r\n                        ) : (\r\n                            courses.map((course) => (\r\n                                <Card\r\n                                    courseName={course.name}\r\n                                    courseType={\r\n                                        course.paid ? \"PREMIUM\" : \"FREE\"\r\n                                    }\r\n                                    thumbnail={\r\n                                        serverUrl + \"/files/pics/\" + course.logo\r\n                                    }\r\n                                    courseId={course._id}\r\n                                    toEnroll={true}\r\n                                />\r\n                            ))\r\n                        )}\r\n                    </div>\r\n                </section>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CourseProvider;\r\n","import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction Jamia() {\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        history.push(\"/provider/6145930f2d14ca0442d533d1\");\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n    return <div></div>;\r\n}\r\n\r\nexport default Jamia;\r\n","import React, { useState } from \"react\";\r\nimport \"react-toastify/dist/ReactToastify.min.css\";\r\nimport axios from \"axios\";\r\nimport \"../Login/LoginRegister.css\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport ReactLoading from \"react-loading\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { serverUrl } from \"../../values/server\";\r\n\r\nfunction Register() {\r\n    const [name, setName] = useState(\"\");\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [address, setAddress] = useState(\"\");\r\n    const [gender, setGender] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const showToast = (msg) => {\r\n        toast(msg, {\r\n            style: {\r\n                background: \"white\",\r\n                color: \"var(--edificeGreen)\",\r\n                textAlign: \"center\",\r\n            },\r\n            position: \"bottom-center\",\r\n            autoClose: 5000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n        });\r\n    };\r\n\r\n    const resetForm = () => {\r\n        setEmail(\"\");\r\n        setPassword(\"\");\r\n        setLoading(false);\r\n    };\r\n\r\n    const register = async () => {\r\n        setLoading(true);\r\n        if (!name) {\r\n            setLoading(false);\r\n            showToast(\"Enter your full name\");\r\n        } else if (!phone) {\r\n            setLoading(false);\r\n            showToast(\"Enter phone number\");\r\n        } else if (!address) {\r\n            setLoading(false);\r\n            showToast(\"Enter address\");\r\n        } else if (!gender) {\r\n            setLoading(false);\r\n            showToast(\"Select Gender\");\r\n        } else if (!email || !password) {\r\n            setLoading(false);\r\n            showToast(\"Email and Password must not be empty\");\r\n            resetForm();\r\n        } else {\r\n            const data = JSON.stringify({\r\n                name: name,\r\n                number: phone,\r\n                address: address,\r\n                email: email,\r\n                birthDate: \"\",\r\n                gender: gender,\r\n                class: \"\",\r\n                father: { name: \"\", number: \"\" },\r\n                costCenter: {\r\n                    divisions: [\"A\"],\r\n                    _id: \"6061dff36932a250cc014c13\",\r\n                    code: \"Edifice Common\",\r\n                    name_ar: \"\",\r\n                    classForm: \"\",\r\n                    limit: null,\r\n                    orderNumber: 0,\r\n                    org_id: \"5f143f5d93c1f321f663aaf6\",\r\n                    __v: 0,\r\n                },\r\n                division: \"A\",\r\n                password: password,\r\n            });\r\n            const config = {\r\n                method: \"post\",\r\n                url: `${serverUrl}/org-registration-lms`,\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": \"JWT eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImluYm94Lndpc2RvbWNyZUBnbWFpbC5jb20iLCJpYXQiOjE1OTg1NjkyMzUsImV4cCI6MTU5ODU2OTUzNX0.X84Zv05tUTVREjHh8JkDntcbPA5yKG65OFVmr1CZ2hY\"\r\n                },\r\n                data: data,\r\n            };\r\n\r\n            axios(config)\r\n                .then((response) => {\r\n                    showToast(\"Registered!\");\r\n                    resetForm();\r\n                    setTimeout(()=>{\r\n                        history.push(\"/login\");\r\n                    }, 1000);\r\n                    setLoading(false);\r\n                })\r\n                .catch((err) => {\r\n                    showToast(\"Something went wrong\");\r\n                    setLoading(false);\r\n                });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <div className=\"bg\">\r\n                <div className=\"form-container\">\r\n                    <div className=\"logo-container\">\r\n                        <img\r\n                            src=\"https://play-lh.googleusercontent.com/SpoozAfBft3HEAvsEV8xHTScJnIzLLWBkt-vb2hONjrsYWn8D7bsm4vKjzp_3-JI4N_K\"\r\n                            alt=\"Logo\"\r\n                        />\r\n                        <p>Edifice</p>\r\n                    </div>\r\n                    <div className=\"form\">\r\n                        <p>Name</p>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Full Name\"\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        />\r\n                        <p>Phone</p>\r\n                        <input\r\n                            type=\"phone\"\r\n                            placeholder=\"Phone Number\"\r\n                            value={phone}\r\n                            onChange={(e) => setPhone(e.target.value)}\r\n                        />\r\n                        <p>Address</p>\r\n                        <input\r\n                            type=\"address\"\r\n                            placeholder=\"Address\"\r\n                            value={address}\r\n                            onChange={(e) => setAddress(e.target.value)}\r\n                        />\r\n                        <p>Gender</p>\r\n                        <select onChange={(e) => setGender(e.target.value)}>\r\n                            <option value=\"\"></option>\r\n                            <option value=\"male\">Male</option>\r\n                            <option value=\"female\">Female</option>\r\n                        </select>\r\n                        <p>Email address</p>\r\n                        <input\r\n                            type=\"email\"\r\n                            placeholder=\"Email\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n                        <p>Password</p>\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                        <button onClick={register}>\r\n                            {loading ? (\r\n                                <ReactLoading\r\n                                    type={\"spinningBubbles\"}\r\n                                    color={\"white\"}\r\n                                    width={\"1rem\"}\r\n                                    height={\"1rem\"}\r\n                                />\r\n                            ) : (\r\n                                \"Register\"\r\n                            )}\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"link-container\">\r\n                        <p>\r\n                            Already Registered?\r\n                            <Link to=\"/login\">Login</Link>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <ToastContainer />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Register;\r\n","import \"./App.css\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Home from \"./Pages/Home/Home\";\r\nimport Login from \"./Pages/Login/Login\";\r\nimport Course from \"./Pages/Course/Course\";\r\nimport ForgotPassword from \"./Pages/ForgotPassword/ForgotPassword\";\r\nimport EnrollCourse from \"./Pages/EnrollCourse/EnrollCourse\";\r\nimport CourseProvider from \"./Pages/CourseProvider/CourseProvider\";\r\nimport Jamia from \"./Pages/CourseProvider/Jamia\";\r\nimport \"./Pages/Login/LoginRegister.css\";\r\nimport Register from \"./Pages/Register/Register\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <>\r\n            <Router>\r\n                <Switch>\r\n                    <Route\r\n                        exact\r\n                        path=\"/\"\r\n                        component={\r\n                            localStorage.getItem(\"token\") !== null\r\n                                ? Home\r\n                                : Login\r\n                        }\r\n                    />\r\n                    <Route exact path=\"/login\" component={Login} />\r\n                    <Route exact path=\"/register\" component={Register} />\r\n                    <Route\r\n                        exact\r\n                        path=\"/forgot-password\"\r\n                        component={ForgotPassword}\r\n                    />\r\n                    <Route\r\n                        exact\r\n                        path=\"/course/:courseId\"\r\n                        component={\r\n                            localStorage.getItem(\"token\") !== null\r\n                                ? Course\r\n                                : Login\r\n                        }\r\n                    />\r\n                    <Route\r\n                        exact\r\n                        path=\"/course/enroll/:courseId\"\r\n                        component={\r\n                            localStorage.getItem(\"token\") !== null\r\n                                ? EnrollCourse\r\n                                : Login\r\n                        }\r\n                    />\r\n                    <Route\r\n                        exact\r\n                        path=\"/provider/:providerId\"\r\n                        component={\r\n                            localStorage.getItem(\"token\") !== null\r\n                                ? CourseProvider\r\n                                : Login\r\n                        }\r\n                    />\r\n                    <Route\r\n                        exact\r\n                        path=\"/jamia\"\r\n                        component={\r\n                            localStorage.getItem(\"token\") !== null\r\n                                ? Jamia\r\n                                : Login\r\n                        }\r\n                    />\r\n                </Switch>\r\n            </Router>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}