{"version":3,"sources":["Components/Navbar/Navbar.js","Components/Card/Card.js","values/server.js","Pages/Home/Home.js","Pages/Login/Login.js","Pages/Course/Course.js","Pages/ForgotPassword/ForgotPassword.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","useState","authenticated","setAuthenticated","useEffect","localStorage","getItem","history","useHistory","className","onClick","push","alt","src","removeItem","window","location","reload","Card","courseName","courseType","thumbnail","courseId","style","toUpperCase","color","serverUrl","Home","document","title","loading","setLoading","myCourses","setMyCourses","data","JSON","stringify","config","method","url","headers","Authorization","axios","then","response","forEach","arr","id","_id","course","console","log","replace","type","map","name","logo","Login","userName","setUserName","password","setPassword","clearFields","showToast","msg","toast","background","textAlign","position","autoClose","hideProgressBar","closeOnClick","value","onChange","e","target","placeholder","org_id","username","setItem","user","token","catch","err","message","width","height","Course","lessons","setLessons","currentLessonId","setCurrentLessonId","currentVideo","setCurrentVideo","currentLessonName","setCurrentLessonName","currentBody","setCurrentBody","useParams","lessonId","a","lesson","every","isExam","youtube_parser","ytLink","body","match","length","videoId","opts","playerVars","modestbranding","rel","showinfo","markAttendance","scrollTo","ForgotPassword","email","setEmail","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"iXA0CeA,EAtCA,WACX,MAA0CC,oBAAS,GAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KAEAC,qBAAU,WAC4B,OAAlCC,aAAaC,QAAQ,SACfH,GAAiB,GACjBA,GAAiB,KACxB,IAEH,IAAMI,EAAUC,cAEhB,OACI,sBAAKC,UAAU,mBAAf,UACI,sBAAKA,UAAU,sBAAsBC,QAAS,WAAKH,EAAQI,KAAK,MAAhE,UACI,qBACIC,IAAI,OACJC,IAAI,+GAER,2CAEJ,qBAAKJ,UAAU,uBAAf,SACKP,EACG,mBACIQ,QAAS,WACLL,aAAaS,WAAW,SACxBC,OAAOC,SAASC,UAHxB,oBASA,mBAAGP,QAAS,kBAAMH,EAAQI,KAAK,WAA/B,yBCeLO,G,MA9CF,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,WAAYC,EAAsC,EAAtCA,WAAYC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,SACzCf,EAAUC,cAEhB,OACI,sBACIE,QAAS,kBAAMH,EAAQI,KAAR,iBAAuBW,KACtCb,UAAU,cAFd,UAII,8BACI,qBAAKA,UAAU,YAAf,SACI,qBAAKI,IAAKQ,EAAWT,IAAI,SAGjC,4BAAIO,IACJ,mBACII,MACiC,YAA7BH,EAAWI,cACL,CAAEC,MAAO,UACoB,SAA7BL,EAAWI,cACX,CAAEC,MAAO,uBACT,CAAEA,MAAO,QANvB,SASKL,EAAWI,qB,iBC3BtBE,EAAY,oC,iBCsIHC,EA7HF,WACTZ,OAAOa,SAASC,MAAQ,iBAExB,MAA8B5B,mBAAS,IAAvC,mBAAO6B,EAAP,KAAgBC,EAAhB,KACA,EAAkC9B,mBAAS,IAA3C,mBAAO+B,EAAP,KAAkBC,EAAlB,KAGM1B,EAAUC,cAyChB,OAvCAJ,qBAAU,WAQN,GAFA2B,EAAW,EAAC,GAAM,IAEoB,OAAlC1B,aAAaC,QAAQ,SAAmB,CACxC,IAAM4B,EAAOC,KAAKC,UAAU,IAEtBC,EAAS,CACXC,OAAQ,OACRC,IAAI,GAAD,OAAKb,EAAL,iCACHc,QAAS,CACL,eAAgB,mBAChBC,cAAc,OAAD,OAASpC,aAAaC,QAAQ,WAE/C4B,KAAMA,GAGVQ,IAAML,GAAQM,MAAK,SAACC,GAChBA,EAASV,KAAKW,SAAQ,SAACX,GACnBD,GAAa,SAACa,GAAD,4BACNA,GADM,CAET,CACIC,GAAIb,EAAKc,IACTC,OAAQf,EAAKe,aAGrBC,QAAQC,IAAIjB,EAAKe,WAErBlB,EAAW,EAAC,GAAO,YAGvBxB,EAAQ6C,QAAQ,YAErB,CAAC7C,IAGA,qCACI,cAAC,EAAD,IACA,sBAAKE,UAAU,kBAAf,UACI,2CACA,2BAEJ,qBAAKA,UAAU,6BAAf,SACKqB,EAAQ,GACL,qBAAKrB,UAAU,yBAAf,SACI,cAAC,IAAD,CACI4C,KAAM,OACN5B,MAAO,cAIfO,EAAUsB,KAAI,SAACL,GAAD,OACV,cAAC,EAAD,CACI9B,WAAY8B,EAAOA,OAAOM,KAC1BnC,WAAW,GACXC,UACIK,EAAY,eAAiBuB,EAAOA,OAAOO,KAE/ClC,SAAU2B,EAAOA,OAAOD,e,gBCqDrCS,G,MA5HD,WACV1C,OAAOa,SAASC,MAAQ,kBAExB,MAAgC5B,mBAAS,IAAzC,mBAAOyD,EAAP,KAAiBC,EAAjB,KACA,EAAgC1D,mBAAS,IAAzC,mBAAO2D,EAAP,KAAiBC,EAAjB,KACA,EAA8B5D,oBAAS,GAAvC,mBAAO6B,EAAP,KAAgBC,EAAhB,KAEMxB,EAAUC,cAEVsD,EAAc,WAChBH,EAAY,IACZE,EAAY,KAGVE,EAAY,SAACC,GACfC,YAAMD,EAAK,CACPzC,MAAO,CACH2C,WAAY,kBACZzC,MAAO,QACP0C,UAAW,UAEfC,SAAU,gBACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,KA4CtB,OACI,mCACI,sBAAK9D,UAAU,gBAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,sBAAKA,UAAU,mBAAf,UACI,qBACIG,IAAI,OACJC,IAAI,+GAER,2CAEJ,qBAAKJ,UAAU,oBAAf,SACI,6EAEJ,sBAAKA,UAAU,wBAAf,UACI,uBACI+D,MAAOd,EACPe,SAAU,SAACC,GAAD,OAAOf,EAAYe,EAAEC,OAAOH,QACtCI,YAAY,QACZvB,KAAK,UAET,uBACImB,MAAOZ,EACPa,SAAU,SAACC,GAAD,OAAOb,EAAYa,EAAEC,OAAOH,QACtCI,YAAY,WACZvB,KAAK,gBAGb,qBAAK5C,UAAU,kCAAkCC,QAAS,kBAAIH,EAAQI,KAAK,qBAA3E,SACI,kDAEJ,sBAAKF,UAAU,mBAAf,UACI,sBAAKA,UAAU,oBAAf,UACI,gDACA,gDAEJ,qBAAKC,QA5ET,WAEZ,GADAqB,GAAW,GACN2B,GAAaE,EAIX,CACH,IAAM1B,EAAOC,KAAKC,UAAU,CACxByC,OAAQ,2BACRC,SAAUpB,EACVE,SAAUA,IAERvB,EAAS,CACXC,OAAQ,OACRC,IAAI,GAAD,OAAKb,EAAL,uBACHc,QAAS,CACL,eAAgB,oBAEpBN,KAAMA,GAGVQ,IAAML,GACDM,MAAK,SAACC,GACHvC,aAAa0E,QAAQ,QAASnC,EAASV,KAAK8C,KAAKC,OACjD1E,EAAQI,KAAK,KACboB,GAAW,GACX+B,IACAZ,QAAQC,IAAIP,EAASV,KAAK8C,KAAKC,OAC/BlE,OAAOC,SAASC,YAEnBiE,OAAM,SAACC,GACgB,wCAAhBA,EAAIC,SACJrB,EAAU,6BAEdhC,GAAW,GACX+B,YAhCR/B,GAAW,GACXgC,EAAU,wCACVD,KAuEmCrD,UAAU,eAAjC,SACMqB,EAGE,cAAC,IAAD,CACIuB,KAAM,OACN5B,MAAO,QACP4D,MAAO,MACPC,OAAQ,QAPf,iBAab,cAAC,IAAD,W,yCCgBDC,EAtIA,SAAC,GAAmB,EAAjBpE,WACdJ,OAAOa,SAASC,MAAQ,8BACxB,MAA8B5B,mBAAS,IAAvC,mBAAOuF,EAAP,KAAgBC,EAAhB,KACA,EAA8CxF,mBAAS,IAAvD,mBAAOyF,EAAP,KAAwBC,EAAxB,KACA,EAAwC1F,mBAAS,IAAjD,mBAAO2F,EAAP,KAAqBC,EAArB,KACA,EAAkD5F,mBAAS,IAA3D,mBAAO6F,EAAP,KAA0BC,EAA1B,KACA,EAAsC9F,mBAAS,IAA/C,mBAAO+F,EAAP,KAAoBC,EAApB,KAEQ3E,EAAa4E,cAAb5E,SACFf,EAAUC,cATe,4CAyD/B,WAA8B2F,GAA9B,iBAAAC,EAAA,6DACUlE,EAAOC,KAAKC,UAAU,CAAEiE,OAAQF,IAChC9D,EAAS,CACXC,OAAQ,OACRC,IAAI,GAAD,OAAKb,EAAL,0BACHc,QAAS,CACL,eAAgB,mBAChBC,cAAc,OAAD,OAASpC,aAAaC,QAAQ,WAE/C4B,KAAMA,GATd,SAYUQ,IAAML,GAZhB,4CAzD+B,sBAW1BhC,aAAaC,QAAQ,UACtBC,EAAQI,KAAK,KAGjBP,qBAAU,WACN,IAAM8B,EAAOC,KAAKC,UAAU,CAAEa,OAAQ3B,IAEhCe,EAAS,CACXC,OAAQ,OACRC,IAAI,GAAD,OAAKb,EAAL,2BACHc,QAAS,CACL,eAAgB,mBAChBC,cAAc,OAAD,OAASpC,aAAaC,QAAQ,WAE/C4B,KAAMA,GAGVQ,IAAML,GAAQM,MAAK,SAACC,GAChBA,EAASV,KAAKoE,OAAM,SAACpE,GACjB,QAAKA,EAAKqE,SACNV,EAAgBW,EAAetE,EAAKuE,SACpCV,EAAqB7D,EAAKqB,MAC1B0C,EAAe/D,EAAKwE,MACpBf,EAAmBzD,EAAKc,KACxBjC,OAAOa,SAASC,MAAQK,EAAKqB,KAAO,cAC7B,MAKfX,EAASV,KAAKW,SAAQ,SAACX,GACnBuD,GAAW,SAAC3C,GAAD,4BACJA,GADI,CAEP,CACIC,GAAIb,EAAKc,IACTO,KAAMrB,EAAKqB,KACXkD,OAAQvE,EAAKuE,OACbF,OAAQrE,EAAKqE,OACbG,KAAMxE,EAAKwE,mBAM5B,IAiBH,IAAMF,EAAiB,SAACjE,GACpB,IAEIoE,EAAQpE,EAAIoE,MADZ,2NAEJ,SAAOA,GAA6B,KAApBA,EAAM,GAAGC,SAAgBD,EAAM,IAGnD,OACI,qCACI,cAAC,EAAD,IACA,sBAAKlG,UAAU,wBAAf,UACI,sBAAKA,UAAU,8BAAf,UACI,cAAC,IAAD,CACIA,UAAU,YACVoG,QAASjB,EACTkB,KAAM,CACFzB,MAAO,OACPC,OAAQ,OACRyB,WAAY,CACRC,eAAgB,EAChBC,IAAK,EACLC,SAAU,MAItB,mBAAGzG,UAAU,UAAb,SAAwBqF,IACxB,mBAAGrF,UAAU,SAAb,SAAuBuF,OAE3B,qBAAKvF,UAAU,gCAAf,SACK+E,EAAQlC,KAAI,SAAC+C,GAAD,OACRA,EAAOE,OAwBJ,KAvBA,sBAEI9F,UACIiF,IAAoBW,EAAOtD,GACrB,qBACA,GAEVrC,QAAS,WACLmF,EACIW,EAAeH,EAAOI,SAE1BV,EAAqBM,EAAO9C,MAC5B0C,EAAeI,EAAOK,MACtBf,EAAmBU,EAAOtD,IApH3B,oCAqHCoE,CAAed,EAAOtD,IACtBhC,OAAOa,SAASC,MACZwE,EAAO9C,KAAO,aAClBxC,OAAOqG,SAAS,EAAG,IAjB3B,UAoBI,4BAAIf,EAAO9C,OACX,4BAAI8C,EAAOK,SApBNL,EAAOtD,gBCA7BsE,EAzGQ,WACnBtG,OAAOa,SAASC,MAAQ,4BAExB,MAA0B5B,mBAAS,IAAnC,mBAAOqH,EAAP,KAAcC,EAAd,KACA,EAA8BtH,oBAAS,GAAvC,mBAAO6B,EAAP,KAAgBC,EAAhB,KAIM+B,GAFUtD,cAEI,WAChB+G,EAAS,MAGPxD,EAAY,SAACC,GACfC,YAAMD,EAAK,CACPzC,MAAO,CACH2C,WAAY,kBACZzC,MAAO,QACP0C,UAAW,UAEfC,SAAU,gBACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,KAwCtB,OACI,mCACI,sBAAK9D,UAAU,gBAAf,UACI,sBAAKA,UAAU,kBAAkBc,MAAO,CAAC+D,OAAQ,QAAjD,UACI,sBAAK7E,UAAU,mBAAf,UACI,qBACIG,IAAI,OACJC,IAAI,+GAER,2CAEJ,qBAAKJ,UAAU,oBAAf,SACI,4EAEJ,qBAAKA,UAAU,wBAAf,SACI,uBACI+D,MAAO8C,EACP7C,SAAU,SAACC,GAAD,OAAO6C,EAAS7C,EAAEC,OAAOH,QACnCI,YAAY,QACZvB,KAAK,YAGb,qBAAK5C,UAAU,mBAAf,SACI,qBAAKC,QA3DR,WAEb,GADAqB,GAAW,GACNuF,EAIE,CACH,IAAMpF,EAAOC,KAAKC,UAAU,CACxBkF,MAAOA,IAELjF,EAAS,CACXC,OAAQ,OACRC,IAAI,GAAD,OAAKb,EAAL,qBACHc,QAAS,CACL,eAAgB,oBAEpBN,KAAMA,GAGVQ,IAAML,GACDM,MAAK,SAACC,GACHb,GAAW,GACX+B,IACAC,EAAgC,YAAtBnB,EAASV,KAAK8B,IAAoB,gBAAkB,sDAC9Dd,QAAQC,IAAIP,EAASV,SAExBgD,OAAM,SAACC,GACgB,wCAAhBA,EAAIC,SACJrB,EAAU,6BAEdhC,GAAW,GACX+B,YA5BR/B,GAAW,GACXgC,EAAU,eACVD,KAsDoCrD,UAAU,eAAlC,SACMqB,EAGE,cAAC,IAAD,CACIuB,KAAM,OACN5B,MAAO,QACP4D,MAAO,MACPC,OAAQ,QAPf,mBAab,cAAC,IAAD,UCrFDkC,EAfH,WACR,OACI,mCACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAA6C,OAAlCtH,aAAaC,QAAQ,SAAoBqB,EAAO8B,IACjF,cAAC,IAAD,CAAOgE,OAAK,EAACC,KAAK,SAASC,UAAWlE,IACtC,cAAC,IAAD,CAAOgE,OAAK,EAACC,KAAK,mBAAmBC,UAAWN,IAChD,cAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,oBAAoBC,UAAWpC,YCHtDqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnF,MAAK,YAAkD,IAA/CoF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF1G,SAAS2G,eAAe,SAM1BX,M","file":"static/js/main.5419577e.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./Navbar.css\";\r\n\r\nconst Navbar = () => {\r\n    const [authenticated, setAuthenticated] = useState(false);\r\n\r\n    useEffect(() => {\r\n        localStorage.getItem(\"token\") === null\r\n            ? setAuthenticated(false)\r\n            : setAuthenticated(true);\r\n    }, []);\r\n\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <nav className=\"navbar-container\">\r\n            <div className=\"navbar-left-portion\" onClick={()=>{history.push(\"/\")}}>\r\n                <img\r\n                    alt=\"logo\"\r\n                    src=\"https://play-lh.googleusercontent.com/SpoozAfBft3HEAvsEV8xHTScJnIzLLWBkt-vb2hONjrsYWn8D7bsm4vKjzp_3-JI4N_K\"\r\n                />\r\n                <p>Edifice</p>\r\n            </div>\r\n            <div className=\"navbar-right-portion\">\r\n                {authenticated ? (\r\n                    <p\r\n                        onClick={() => {\r\n                            localStorage.removeItem(\"token\");\r\n                            window.location.reload();\r\n                        }}\r\n                    >\r\n                        LOGOUT\r\n                    </p>\r\n                ) : (\r\n                    <p onClick={() => history.push(\"/login\")}>LOGIN</p>\r\n                )}\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./Card.css\";\r\n\r\nconst Card = ({ courseName, courseType, thumbnail, courseId }) => {\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <div\r\n            onClick={() => history.push(`course/${courseId}`)}\r\n            className=\"course-card\"\r\n        >\r\n            <div>\r\n                <div className=\"thumbnail\">\r\n                    <img src={thumbnail} alt=\"\"></img>\r\n                </div>\r\n            </div>\r\n            <p>{courseName}</p>\r\n            <p\r\n                style={\r\n                    courseType.toUpperCase() === \"PREMIUM\"\r\n                        ? { color: \"orange\" }\r\n                        : courseType.toUpperCase() === \"FREE\"\r\n                        ? { color: \"var(--edificeGreen)\" }\r\n                        : { color: \"grey\" }\r\n                }\r\n            >\r\n                {courseType.toUpperCase()}\r\n            </p>\r\n        </div>\r\n        // <div className=\"homepage-course-card\">\r\n        //     <div>\r\n        //         <div></div>\r\n        //     </div>\r\n        //     <p>Lorem ipsum sample Course</p>\r\n        //     <p\r\n        //         style={\r\n        //             courseType.toUpperCase() === \"PREMIUM\"\r\n        //                 ? { color: \"orange\" }\r\n        //                 : courseType.toUpperCase() === \"FREE\"\r\n        //                 ? { color: \"green\" }\r\n        //                 : null\r\n        //         }\r\n        //     >\r\n        //         {courseType.toUpperCase()}\r\n        //     </p>\r\n        // </div>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","const serverUrl = \"http://edificeapp.wisdomislam.org\";\r\n\r\nexport { serverUrl };\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Home.css\";\r\nimport Navbar from \"../../Components/Navbar/Navbar\";\r\nimport Card from \"../../Components/Card/Card\";\r\nimport axios from \"axios\";\r\nimport { serverUrl } from \"../../values/server\";\r\nimport ReactLoading from \"react-loading\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Home = () => {\r\n    window.document.title = \"Home | Edifice\";\r\n\r\n    const [loading, setLoading] = useState([]);\r\n    const [myCourses, setMyCourses] = useState([]);\r\n    // const [authenticated, setAuthenticated] = useState(false);\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        // if (localStorage.getItem(\"token\") === null) {\r\n        //     setAuthenticated(false);\r\n        // } else {\r\n        //     setAuthenticated(true);\r\n        // }\r\n        setLoading([true, true]);\r\n\r\n        if (localStorage.getItem(\"token\") !== null) {\r\n            const data = JSON.stringify({});\r\n\r\n            const config = {\r\n                method: \"post\",\r\n                url: `${serverUrl}/lms/get-lmsCourseEnroll-list`,\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `JWT ${localStorage.getItem(\"token\")}`,\r\n                },\r\n                data: data,\r\n            };\r\n\r\n            axios(config).then((response) => {\r\n                response.data.forEach((data) => {\r\n                    setMyCourses((arr) => [\r\n                        ...arr,\r\n                        {\r\n                            id: data._id,\r\n                            course: data.course,\r\n                        },\r\n                    ]);\r\n                    console.log(data.course);\r\n                });\r\n                setLoading([false, true]);\r\n            });\r\n        } else {\r\n            history.replace(\"/login\");\r\n        }\r\n    }, [history]);\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <div className=\"homepage-header\">\r\n                <p>My Courses</p>\r\n                <div></div>\r\n            </div>\r\n            <div className=\"homepage-course-cards-list\">\r\n                {loading[0] ? (\r\n                    <div className=\"loading-spin-container\">\r\n                        <ReactLoading\r\n                            type={\"spin\"}\r\n                            color={\"#00bc4e\"}\r\n                        />\r\n                    </div>\r\n                ) : (\r\n                    myCourses.map((course) => (\r\n                        <Card\r\n                            courseName={course.course.name}\r\n                            courseType=\"\"\r\n                            thumbnail={\r\n                                serverUrl + \"/files/pics/\" + course.course.logo\r\n                            }\r\n                            courseId={course.course._id}\r\n                        />\r\n                    ))\r\n                )}\r\n            </div>\r\n            {/* <div>\r\n                <div className=\"homepage-header\">\r\n                    <p>All Courses</p>\r\n                    <div></div>\r\n                </div>\r\n                <div className=\"homepage-course-cards-list\">\r\n                    {loading[1] ? (\r\n                        <div className=\"loading-spin-container\">\r\n                            <ReactLoading\r\n                                type={\"spin\"}\r\n                                color={\"#00bc4e\"}\r\n                                width={\"5%\"}\r\n                                height={\"100%\"}\r\n                            />\r\n                        </div>\r\n                    ) : (\r\n                        <>\r\n                            <Card\r\n                                courseName=\"Sample Course\"\r\n                                courseType=\"Free\"\r\n                            />\r\n                            <Card\r\n                                courseName=\"Sample Course\"\r\n                                courseType=\"Premium\"\r\n                            />\r\n                            <Card\r\n                                courseName=\"Sample Course\"\r\n                                courseType=\"Premium\"\r\n                            />\r\n                            <Card\r\n                                courseName=\"Sample Course\"\r\n                                courseType=\"Free\"\r\n                            />\r\n                            <Card\r\n                                courseName=\"Sample Course\"\r\n                                courseType=\"Free\"\r\n                            />\r\n                            <Card\r\n                                courseName=\"Sample Course\"\r\n                                courseType=\"Premium\"\r\n                            />\r\n                        </>\r\n                    )}\r\n                </div>\r\n            </div> */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { serverUrl } from \"../../values/server\";\r\nimport \"./Login.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport ReactLoading from \"react-loading\";\r\n\r\nconst Login = () => {\r\n    window.document.title = \"Login | Edifice\";\r\n\r\n    const [userName, setUserName] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const history = useHistory();\r\n\r\n    const clearFields = () => {\r\n        setUserName(\"\");\r\n        setPassword(\"\");\r\n    };\r\n\r\n    const showToast = (msg) => {\r\n        toast(msg, {\r\n            style: {\r\n                background: \"var(--errorRed)\",\r\n                color: \"white\",\r\n                textAlign: \"center\",\r\n            },\r\n            position: \"bottom-center\",\r\n            autoClose: 5000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n        });\r\n    };\r\n\r\n    const onLogin = () => {\r\n        setLoading(true);\r\n        if (!userName || !password) {\r\n            setLoading(false);\r\n            showToast(\"Email and Password must not be empty\");\r\n            clearFields();\r\n        } else {\r\n            const data = JSON.stringify({\r\n                org_id: \"5f143f5d93c1f321f663aaf6\",\r\n                username: userName,\r\n                password: password,\r\n            });\r\n            const config = {\r\n                method: \"post\",\r\n                url: `${serverUrl}/users/authenticate`,\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                data: data,\r\n            };\r\n\r\n            axios(config)\r\n                .then((response) => {\r\n                    localStorage.setItem(\"token\", response.data.user.token);\r\n                    history.push(\"/\");\r\n                    setLoading(false);\r\n                    clearFields();\r\n                    console.log(response.data.user.token);\r\n                    window.location.reload();\r\n                })\r\n                .catch((err) => {\r\n                    if (err.message === \"Request failed with status code 500\") {\r\n                        showToast(\"Invalid email or password\");\r\n                    }\r\n                    setLoading(false);\r\n                    clearFields();\r\n                });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"login-wrapper\">\r\n                <div className=\"login-container\">\r\n                    <div className=\"login-header-row\">\r\n                        <img\r\n                            alt=\"logo\"\r\n                            src=\"https://play-lh.googleusercontent.com/SpoozAfBft3HEAvsEV8xHTScJnIzLLWBkt-vb2hONjrsYWn8D7bsm4vKjzp_3-JI4N_K\"\r\n                        />\r\n                        <p>EDIFICE</p>\r\n                    </div>\r\n                    <div className=\"login-header-desc\">\r\n                        <p>Log in to Edifice with email and password.</p>\r\n                    </div>\r\n                    <div className=\"login-input-container\">\r\n                        <input\r\n                            value={userName}\r\n                            onChange={(e) => setUserName(e.target.value)}\r\n                            placeholder=\"Email\"\r\n                            type=\"email\"\r\n                        />\r\n                        <input\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            placeholder=\"Password\"\r\n                            type=\"password\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"login-forgot-password-container\" onClick={()=>history.push(\"/forgot-password\")}>\r\n                        <p>Forgot Password</p>\r\n                    </div>\r\n                    <div className=\"login-footer-row\">\r\n                        <div className=\"login-text-button\">\r\n                            <p>Not Registered?</p>\r\n                            <p>Register Now</p>\r\n                        </div>\r\n                        <div onClick={onLogin} className=\"login-button\">\r\n                            {!loading ? (\r\n                                `LOG IN`\r\n                            ) : (\r\n                                <ReactLoading\r\n                                    type={\"spin\"}\r\n                                    color={\"white\"}\r\n                                    width={\"10%\"}\r\n                                    height={\"60%\"}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <ToastContainer />\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router\";\r\nimport { serverUrl } from \"../../values/server\";\r\nimport \"./Course.css\";\r\nimport YouTube from \"react-youtube\";\r\nimport Navbar from \"../../Components/Navbar/Navbar\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Course = ({ courseName }) => {\r\n    window.document.title = \"Loading Lessons.. | Edifice\";\r\n    const [lessons, setLessons] = useState([]);\r\n    const [currentLessonId, setCurrentLessonId] = useState(\"\");\r\n    const [currentVideo, setCurrentVideo] = useState(\"\");\r\n    const [currentLessonName, setCurrentLessonName] = useState(\"\");\r\n    const [currentBody, setCurrentBody] = useState(\"\");\r\n\r\n    const { courseId } = useParams();\r\n    const history = useHistory();\r\n\r\n    if (!localStorage.getItem(\"token\")) {\r\n        history.push(\"/\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        const data = JSON.stringify({ course: courseId });\r\n\r\n        const config = {\r\n            method: \"post\",\r\n            url: `${serverUrl}/lms/get-lmsLesson-list`,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `JWT ${localStorage.getItem(\"token\")}`,\r\n            },\r\n            data: data,\r\n        };\r\n\r\n        axios(config).then((response) => {\r\n            response.data.every((data) => {\r\n                if (!data.isExam) {\r\n                    setCurrentVideo(youtube_parser(data.ytLink));\r\n                    setCurrentLessonName(data.name);\r\n                    setCurrentBody(data.body);\r\n                    setCurrentLessonId(data._id);\r\n                    window.document.title = data.name + \" - Edifice\";\r\n                    return false;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            response.data.forEach((data) => {\r\n                setLessons((arr) => [\r\n                    ...arr,\r\n                    {\r\n                        id: data._id,\r\n                        name: data.name,\r\n                        ytLink: data.ytLink,\r\n                        isExam: data.isExam,\r\n                        body: data.body,\r\n                    },\r\n                ]);\r\n            });\r\n        });\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    async function markAttendance(lessonId) {\r\n        const data = JSON.stringify({ lesson: lessonId });\r\n        const config = {\r\n            method: \"post\",\r\n            url: `${serverUrl}/lms/get-lmsAttendance`,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `JWT ${localStorage.getItem(\"token\")}`,\r\n            },\r\n            data: data,\r\n        };\r\n\r\n        await axios(config);\r\n    }\r\n\r\n    const youtube_parser = (url) => {\r\n        var regExp =\r\n            /^https?:\\/\\/(?:www\\.youtube(?:-nocookie)?\\.com\\/|m\\.youtube\\.com\\/|youtube\\.com\\/)?(?:ytscreeningroom\\?vi?=|youtu\\.be\\/|vi?\\/|user\\/.+\\/u\\/\\w{1,2}\\/|embed\\/|watch\\?(?:.*&)?vi?=|&vi?=|\\?(?:.*&)?vi?=)([^#&?\\n/<>\"']*)/i;\r\n        var match = url.match(regExp);\r\n        return match && match[1].length === 11 ? match[1] : false;\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <div className=\"course-page-container\">\r\n                <div className=\"course-page-video-container\">\r\n                    <YouTube\r\n                        className=\"yt-player\"\r\n                        videoId={currentVideo}\r\n                        opts={{\r\n                            width: \"100%\",\r\n                            height: \"100%\",\r\n                            playerVars: {\r\n                                modestbranding: 1,\r\n                                rel: 0,\r\n                                showinfo: 0,\r\n                            },\r\n                        }}\r\n                    />\r\n                    <p className=\"ytTitle\">{currentLessonName}</p>\r\n                    <p className=\"ytBody\">{currentBody}</p>\r\n                </div>\r\n                <div className=\"course-name-lessons-container\">\r\n                    {lessons.map((lesson) =>\r\n                        !lesson.isExam ? (\r\n                            <div\r\n                                key={lesson.id}\r\n                                className={\r\n                                    currentLessonId === lesson.id\r\n                                        ? \"active-lesson-card\"\r\n                                        : \"\"\r\n                                }\r\n                                onClick={() => {\r\n                                    setCurrentVideo(\r\n                                        youtube_parser(lesson.ytLink)\r\n                                    );\r\n                                    setCurrentLessonName(lesson.name);\r\n                                    setCurrentBody(lesson.body);\r\n                                    setCurrentLessonId(lesson.id);\r\n                                    markAttendance(lesson.id);\r\n                                    window.document.title =\r\n                                        lesson.name + \" | Edifice\";\r\n                                    window.scrollTo(0, 0);\r\n                                }}\r\n                            >\r\n                                <p>{lesson.name}</p>\r\n                                <p>{lesson.body}</p>\r\n                            </div>\r\n                        ) : null\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Course;\r\n","import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { serverUrl } from \"../../values/server\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport ReactLoading from \"react-loading\";\r\n\r\nconst ForgotPassword = () => {\r\n    window.document.title = \"Change Password | Edifice\";\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const history = useHistory();\r\n\r\n    const clearFields = () => {\r\n        setEmail(\"\");\r\n    };\r\n\r\n    const showToast = (msg) => {\r\n        toast(msg, {\r\n            style: {\r\n                background: \"var(--errorRed)\",\r\n                color: \"white\",\r\n                textAlign: \"center\",\r\n            },\r\n            position: \"bottom-center\",\r\n            autoClose: 5000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n        });\r\n    };\r\n\r\n    const sendLink = () => {\r\n        setLoading(true);\r\n        if (!email) {\r\n            setLoading(false);\r\n            showToast(\"Enter email\");\r\n            clearFields();\r\n        } else {\r\n            const data = JSON.stringify({\r\n                email: email\r\n            });\r\n            const config = {\r\n                method: \"post\",\r\n                url: `${serverUrl}/users/reset-pass`,\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                data: data,\r\n            };\r\n\r\n            axios(config)\r\n                .then((response) => {\r\n                    setLoading(false);\r\n                    clearFields();\r\n                    showToast(response.data.msg === \"PENDING\" ? \"Already sent!\" : \"Password reset link sent! Please check your inbox.\");\r\n                    console.log(response.data);\r\n                })\r\n                .catch((err) => {\r\n                    if (err.message === \"Request failed with status code 500\") {\r\n                        showToast(\"Invalid email or password\");\r\n                    }\r\n                    setLoading(false);\r\n                    clearFields();\r\n                });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"login-wrapper\">\r\n                <div className=\"login-container\" style={{height: \"auto\"}}>\r\n                    <div className=\"login-header-row\">\r\n                        <img\r\n                            alt=\"logo\"\r\n                            src=\"https://play-lh.googleusercontent.com/SpoozAfBft3HEAvsEV8xHTScJnIzLLWBkt-vb2hONjrsYWn8D7bsm4vKjzp_3-JI4N_K\"\r\n                        />\r\n                        <p>EDIFICE</p>\r\n                    </div>\r\n                    <div className=\"login-header-desc\">\r\n                        <p>Enter your email for password reset link.</p>\r\n                    </div>\r\n                    <div className=\"login-input-container\">\r\n                        <input\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            placeholder=\"Email\"\r\n                            type=\"email\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"login-footer-row\">\r\n                        <div onClick={sendLink} className=\"login-button\">\r\n                            {!loading ? (\r\n                                `Send Link`\r\n                            ) : (\r\n                                <ReactLoading\r\n                                    type={\"spin\"}\r\n                                    color={\"white\"}\r\n                                    width={\"10%\"}\r\n                                    height={\"60%\"}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <ToastContainer />\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","import \"./App.css\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Home from \"./Pages/Home/Home\";\r\nimport Login from \"./Pages/Login/Login\";\r\nimport Course from \"./Pages/Course/Course\";\r\nimport ForgotPassword from \"./Pages/ForgotPassword/ForgotPassword\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <>\r\n            <Router>\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={localStorage.getItem(\"token\") !== null ? Home : Login} />\r\n                    <Route exact path=\"/login\" component={Login} />\r\n                    <Route exact path=\"/forgot-password\" component={ForgotPassword} />\r\n                    <Route exact path=\"/course/:courseId\" component={Course} />\r\n                </Switch>\r\n            </Router>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}